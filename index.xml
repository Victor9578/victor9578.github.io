<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jaywxl</title>
    <link>https://www.jaywxl.eu.org/</link>
    <description>Recent content on Jaywxl</description>
    <image>
      <url>https://i.loli.net/2021/09/26/3OMGXylm8HUYJ6p.png</url>
      <link>https://i.loli.net/2021/09/26/3OMGXylm8HUYJ6p.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <lastBuildDate>Mon, 14 Apr 2025 16:32:59 +0800</lastBuildDate><atom:link href="https://www.jaywxl.eu.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>First Post</title>
      <link>https://www.jaywxl.eu.org/posts/life/1_first-post/</link>
      <pubDate>Fri, 05 Feb 2021 21:18:46 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/1_first-post/</guid>
      <description>Say Hello!🤩</description>
      <content:encoded><![CDATA[<h1 id="我的博客又要开始了">我的博客又要开始了</h1>
<p>今后我会在vscode 来写markdown来更新我的blog 希望可以帮助到各位！！！😁</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>影视收藏</title>
      <link>https://www.jaywxl.eu.org/posts/life/2_secend/</link>
      <pubDate>Fri, 05 Feb 2021 21:56:57 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/2_secend/</guid>
      <description>搜刮的一些在线视频站点。</description>
      <content:encoded><![CDATA[<h1 id="影视收藏">影视收藏</h1>
<p>😜🤥<br>
<strong>不定期更新<br>
所有站点都来源于互联网</strong></p>
<hr>
<ul>
<li><a href="https://ddrk.me" target="_blank" rel="noopener">低端影视</a>
</li>
<li><a href="https://www.btbdys.com" target="_blank" rel="noopener">哔嘀影视</a>
</li>
<li><a href="https://ikan.neocities.org/" target="_blank" rel="noopener"><font color = pink> 真不卡 </font></a>
</li>
<li><a href="https://www.btnull.re/" target="_blank" rel="noopener">片库</a>
</li>
<li><del><a href="https://www.duboku.tv" target="_blank" rel="noopener">独播库</a>
</del></li>
<li><a href="https://yanetflix.com" target="_blank" rel="noopener">奈飞中文电影站</a>
</li>
<li><del><a href="https://www.mudvod.tv" target="_blank" rel="noopener">泥巴影院</a>
</del></li>
<li><del><a href="https://www.mudvod.tv" target="_blank" rel="noopener">Tubitv</a>
</del></li>
<li><del><a href="https://www.mudvod.tv" target="_blank" rel="noopener">剧嗨</a>
</del></li>
</ul>
<hr>
<p><strong>一些种子站点</strong></p>
<ul>
<li></li>
</ul>
<p align ='right'>--by Jaywxl</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Notes | 聊聊近况~</title>
      <link>https://www.jaywxl.eu.org/posts/life/13_liaoliaotian/</link>
      <pubDate>Mon, 14 Apr 2025 16:32:59 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/13_liaoliaotian/</guid>
      <description>上一次写Blog是24年8月转的公众号贞观的文章《一个外地女孩，死在了我出租的公寓》，现在公众号没了，文章也石沉大海，社会的关注从原来的那么</description>
      <content:encoded><![CDATA[<p>上一次写Blog是24年8月转的<code>公众号贞观</code>的文章《一个外地女孩，死在了我出租的公寓》，现在公众号没了，文章也石沉大海，社会的关注从原来的那么一miumiu也销声匿迹，从制度到民众，唏嘘不已，中华民族的伟大复兴的确还需建设…</p>
<p>对博客网站来说，我也是Long time no see，so聊聊近期都干了什么吧，这期间跨度的日子还是挺长的，但确幸我是个无聊的人，所以无事发生。来看短短的流水账吧 :)（写notion时的心情还是不错的）</p>
<h1 id="算命与工作">算命与工作</h1>
<p>为什么第一个是要讲算命的？因这在广大的世界当中确实是很重要的活动，算命这个动作就像<em><strong>当一个人询问别人选择建议的时候，其实原本就已经做好选择一样</strong></em>，是对内心所思所想的自我说服、自我妥协、自我确信；还有一个原因是它联系着工作，工作遇到转折，才萌生Deepseek用周易给我算算生辰命运的想法。</p>
<p>是的，我用的就是D老师进行的赛博算命，事情起因在25年的3月，工作中一个风险较大的项目开始实施，我在其中参与了主体之外的设计（幸好是无关紧要的部分）、部分审查工作由来的。D老师算出来今年我会有风险与变化，<em><strong>流年乙木正官透出，事业有新机会，但巳亥冲（变动）、火旺克金，需稳扎稳打，避免冲动投资</strong></em>。最终，我还是选择收集证据链，自我说服、自我妥协、自我确信，没有离职跑路。但其中风险我需谨慎处置。算命的说我32年会水库大开，让我们拭目以待吧。</p>
<h1 id="旅行与生活">旅行与生活</h1>
<p>9个月的时间里，出去玩的也不少，一个人去大理/丽江、和家人去袁家村、和朋友在西安周边小地方闲逛。旅行还是满有趣的，遇得到美景美女，心情也是轻快、无忧、舒畅，后面应该会记录去云南的旅行Blog，并且今年计划还要在去。袁家村一般，古街巷还是很有味道，但我去的时候人好多，体验一般。西安周围逛了几个公园，什么长安的、灞桥的，长安的那个还出了几张不错的作品:)</p>
<p>生活上，这段时间里搬了新的地方，小区环境很棒，绿意盎然，和朋友一起合租。</p>
<p>昨天看英超动静太大，竟然惊扰了下面的邻居，还让人上门敲门⚠️投诉，真是人生首次，好好反思。</p>
<blockquote>
<p>　<strong>========== 20250417补充点旅游的记录吧，不然感觉记不得了 ==========</strong><br>
<em><strong>（哈哈哈，现在的脑子真的不好了，事情记不住，电视看完不知道演的什么，歌听完不知道唱的什么，书读完不知道写的什么🤣）</strong></em><br>
我是西安出发，飞大理的，落地的时候，十一月底的阳光还是亮的能刺瞎双眼，专项购买的墨镜和防晒霜，坐在机场大巴上就给我用上了。大巴到达的是古城的西门，南门没墙，就是一牌匾，两道，往里走还有一道，里面导航基本废了走进小路，我去找民宿走了很久。第一天到了晚上在古城逛了逛，走着人最多的几条街，如果此趟有人与我伴行，那我一定会对我的伴儿说“这都是..的古街道商铺，有啥意思？”，但真的一个走在古城的石板路上，确实放松、快乐的，仿佛古镇街上的空气包容了你、路边酒吧的音乐淹没了你、远处的山峰充斥了你。我举着相机走在路上，一步一景，每个人都是那么的特别、轻快，没有工位上的面无表情、没有家里的家长里短、没有情侣的毛寸重重。一个人的旅行确实舒适。<br>
第二天去了洱海，龙龛码头，海西生态廊道，生态廊道也是很不错的地方，我用了两个下午骑电动车来走完，从码头到喜洲，第二天下午到一个村子的大树结束，第三天下午再去走完。早晨的古城集市很多，三月街也有，集市我见得很多，每个地方题材都大差不差，但内容可是各具特色，当地的菌子、特有蔬菜、布染玲琅满目。<br>
喜洲是我很喜欢的一环，有我一程中最中意的餐馆，很可惜没给他们好好照一张相，店里是几位回族大姐在主持，吃饭的过程目睹了她们一口气切一个星期的肉，肉量很是豪横，六块钱一碗的米线仿佛有十二块规格的肉量，并且我一个不经常吃米线的都觉得味道很棒，价格超值。我还喜欢吃红烧牛肉，薄荷配牛肉，红烧的汤汁，香味属于是红烧浓厚的汤汁口感夹带着清香，不是酸甜、不是酱香，很奇妙的味道，直冲天灵盖，欲罢不能。饵丝这种食材，经过我的验证，我的胃说他不喜欢，嗯..我尊重他。<br>
接下来是海东之行，住到了本次行程的唯一海景房（湖景房），晚上伴着洱海的阵阵波涛声，泡在窗边的温水浴缸中，风很大但很柔，扬起的帘布轻抚我仅露的面部，这时太需要一杯威士忌了&hellip;<br>
海东骑行环境对比生态廊道，那兼职天壤之别，海东之行唯一慰藉我的就是看到了苍山之光，丁达尔效益让苍山上的阳光洒向洱海，天门骤开，海西是静谧、纯粹的，只有美景和旅人，没有生活没有工作，更能治愈我。<br>
接下来到了丽江，接着把丽江的三个古城都转了一遍，北边的两个束河和白沙，人很少，商业化也不多。人们都嫌弃古城商业化高，没有原汁原味，可让他们来着，人却少的可怜。所以旅行是在追求什么？人文、山河、历史、经历、自我，这是一个深奥的问题，可能一辈子走在南辕北辙。<br>
再写点旅行心得吧，留作记录，防止脑子不好..😊，首先吃的我建议首选回族餐厅，这个很简单，先看美团外卖，那个好直接去线下。接下来是住宿，我这趟基本是几天就换一个古镇上的住处，一般提前一晚先看好民宿，多看几个不订，早上睡完懒觉再出发，中午下午到古镇，再订房间，一般都会便宜不少。交通路途较段建议大巴，一般镇与镇之间都有大巴，很方便，信息可以使用微信搜索。</p>
</blockquote>
<h1 id="阅读与影音">阅读与影音</h1>
<p>去年读了不少的书，</p>
<ul>
<li>我的阿勒泰</li>
<li>舞！舞！舞！</li>
<li>杀死一只知更鸟</li>
<li>挪威的森林</li>
<li>且听风吟</li>
<li>遥远的救世主</li>
<li>自在京都</li>
<li>丰乳肥臀</li>
</ul>
<p>读书是非常好的生活内容，慢慢的可能我也爱上这一活动了，最近在读《能源赛局》，是一本讲世界能源格局与地缘政治，影响国际社会外交地位的书籍，蛮有意思的，结合最近的中美贸易战，嗯&hellip;能源确实是国家发展、国际对抗、地缘博弈很关键的筹码，确实如此。</p>
<p>剧集就不列举了，电影看了很多，这段时间喜欢的人有由远及近赵丽颖、贾静雯、刘诗诗、杨谨华、张钧甯。钧甯真的好美（还有和吴青峰、安溥的神仙友谊，台湾的圈子好小啊，还是我喜欢的人好相似呀~我一直都信奉，“如果你去演唱会找对象，那么你一定找对了，因为那里都是能和你同频共振的人”），看垦丁天气晴，啊&hellip;如果我0几年就认识钧甯，就知道他，那我的青春就应该会有清晰的形状了。</p>
<p>音乐这几年喜欢的也都是温柔有力，可爱又富有哲思的：张悬/安溥、陈珊妮、梁静茹、张惠妹、郑宜农、陈粒、陈绮贞。都是这段时间反反复复在听的。</p>
<p>去年看了安溥的西安时寐，希望今年还能看到西安的潮水箴言。</p>
<p align="right" > - by Jaywxl</p>
<p align="right" > Mon,Apr 14 2025 </p>]]></content:encoded>
    </item>
    
    <item>
      <title>Notes | 转存贞观文章《一个外地女孩，死在了我出租的公寓》</title>
      <link>https://www.jaywxl.eu.org/posts/life/12_yigewaidinvhaisizailechuzugongyu/</link>
      <pubDate>Mon, 19 Aug 2024 13:33:24 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/12_yigewaidinvhaisizailechuzugongyu/</guid>
      <description>如今文字已被贞观隐入尘埃，甚至声明都“梅开二度”，还扯动了网信办。互联网上却还是质疑声一片，质疑虚构，质疑会有人自己饿死自己的傻，质疑没钱还租昂贵公寓的假。我个人相信文章的真实性的，相信这思想文化的包罗万象。所以在这么一个无人问津的角落，记录下心情并珍藏故事，让我在一个人的时候，也能多多体悟这世道。</description>
      <content:encoded><![CDATA[<p>从白嵩哪里知道的一个西安本地公众号，很喜欢&ndash;贞观。看文章应该还没到中午，久久不能平复，立即把它分享给了我好几个好友群，下午上班也一直再重复刷文章、刷评论。<br>
不知道怎么地了，从上次辞职完后人就变了，变得想关注社会、人文，telegram、youtube看的也不多了，以前看图个乐子，总想看黑暗面，了解黑历史。现在看东西更喜欢向阳光、现实的方向考虑，思考到底为什么是这样，是因为所处的环境、社会的文化、人的认知还是等等别的方面。<br>
那天中午每次看文章，一直再读新评论，总有人用一种居高临下的口吻在讲“如今这社会还能饿死人···送个外卖也饿不死呀···211毕业的大学生随便当个出纳都死不了···父母养了30多年，毕业了也要父母养着，房租都得父母来凑，住那么贵的房子，就非得考个公务员···”，确实是有人不能理解世界的大、人生的苦，多点包容吧。<br>
如今文字已被贞观隐入尘埃，甚至声明都“梅开二度”，还扯动了网信办。互联网上却还是质疑声一片，质疑虚构，质疑会有人自己饿死自己的傻，质疑没钱还租昂贵公寓的假。我个人相信文章的真实性的，相信这思想文化的包罗万象。所以在这么一个无人问津的角落，记录下心情并珍藏故事，让我在一个人的时候，也能多多体悟这世道。</p>
<h1 id="原文转载">原文转载</h1>
<img src='/img_waidinvhai/image.png' title='贞观原文'>
<h1 id="体悟">体悟</h1>
<p>其实没那么深刻感悟的，人已经在彼岸了，不会有人知道她死去时的真实想法。我们都是用自己的思想观念和认知水平去共情她。</p>
<p>她以饿死自己这样方式自杀，她拉黑掉所有亲戚的联系方式，她在繁华街巷昂贵出租屋中悄然死去。<br>
我想她最终屈服于这个世界&hellip;<br>
她缺乏生活经验，连拙劣的天然气骗子也不能辨别，多次面试被刷；但她努力学习考上北京某211，多次考公笔试第一。<br>
我想她曾经对抗过这个世界<br>
她让父母供养了10年；然而血肉至亲也没能敌过家乡的恶俗，父母的固有观念。<br>
我想她起初是热爱这个世界</p>
<p>个人的猜想，女陔努力考入北京211，却因生活背景、自身性格不能很好的融入，毕业父母希望光耀门楣，考上公务员，不惜借贷搭入全部身家，孤注一掷。孩子因自身性格一步步的失败，转变为不甘心，最终坠入深渊&hellip;<br>
我想这更多是社会文化的问题，是不先进的、不符合事物发展规律的文化造就了乡土文化，殖民了父母观念，塑造了女孩性格。</p>
<p>可是怎么总结先进文化、怎么宣扬先进文化、怎么践行遵守事物规律，更值得社会大众好好探讨。</p>
<p>愿逝者安息🙏<br>
好好生活~</p>
<p align="right" > - by Jaywxl</p>
<p align="right" > Mon,Aug 19 2024 </p>]]></content:encoded>
    </item>
    
    <item>
      <title>Notes | 华山旅游&amp;终南山&amp;近期小酌小聚</title>
      <link>https://www.jaywxl.eu.org/posts/life/11_huashanzhixing_jiazhongxiaoju/</link>
      <pubDate>Fri, 12 Apr 2024 15:15:53 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/11_huashanzhixing_jiazhongxiaoju/</guid>
      <description>很久没有写过blog了，最近真的是挺忙的（都是借口🤣）， 爬完山太累了、 喝完酒太累了、 上完班太累了、 看书也太累了&amp;hellip; 都是借口的啦 呜</description>
      <content:encoded><![CDATA[<blockquote>
<p>很久没有写过blog了，最近真的是挺忙的（都是借口🤣），
爬完山太累了、
喝完酒太累了、
上完班太累了、
看书也太累了&hellip;
都是借口的啦　呜呜~~~
那就总结下最近的事情吧，一会儿再写一篇最近读的书
好久没写作文，真的是语言组织能力渣到爆欸:(</p>
</blockquote>
<h2 id="爬山">爬山</h2>
<p>爬山作为我工作中经常需要做的事情，放假爬山我一直还蛮不想干的。<br>
小陈从内蒙的煤矿回来，辞职了&hellip;我身边的地质同学几乎都辞职一轮了（工作了的），煤矿的工作非常辛苦且危险，环境还很差劲，记得有一次他们分享照片，刚从煤矿爬上来，除了口罩遮下面，脸都黑完了，真是应了那句“从煤球里爬出来的”。<br>
小陈回家路过西安，开着他工作1年买的的哈弗大狗（薪资水平还不错），看起来很是轻松，我们也为他高兴，老同学来了总得聚聚。作为我们宿舍最喜欢花活、最讲究的人，小凡果不其然想出了一个好活&ndash;爬华山！他们俩一道给我软磨硬泡最终一个节假日的早晨，我们出发了。<br>
冬天的早晨天才微微亮，天蓝的很透彻，没有一片云彩，阳光还未探出地平线，泛着的“鱼肚白”接着天边，很是好看&hellip;其实这些都是我编的，因为七点从纺织城地铁站出来到，我的眼睛应该还没有睁开。<br>
坐上车，向着华县出发了，我很不想闲暇时间来爬山，不过和朋友们在一起还算是有趣的。中途有小插曲，笨b高速口下错了。<br>
上山的路线我们选择了“西上北下”，难度较低，不太中用。上山索道的路上遇到一个母亲带着孩子和孩子姥姥，小孩子果然是天不怕地不怕，坐在索道车厢里竟然走来走去，不知道为什么我小时候没有这么勇。爬升的路两个地质好学生竟然还在看共轭节理，我已经晕头转向、紧扣脚趾了。索道站开在绝壁之上的，“脚踏实地”的感觉太棒了，出站后简单的在庙里休整了就向着西峰峰顶进发了。登顶后，顿时索然无味，看着远处青龙背上的人们，不禁把刚放下的心又提到嗓子眼。最后接连攀登了几座主峰后，绕到了北峰下山，和这两位优秀的地质工作者，环着华山几个山头跑了一圈，愣是一步都没让我歇着，下午竟然早早就完事回家了。下山去北峰索道的路上，反正我向下是挺害怕的，不知道这种路向上得多刺激😂<br>
下山来到县城吃了我第一顿塔斯汀，就那样&hellip;晚上又绕了半个西安城，就为了找个大澡堂子，结果里面也是人山人海，草草收场了&hellip;哦想起来了当时是23年的12月30号，最叫人叫苦连天的是，第二天我们一起在绿树度过了“美好”的跨年夜&hellip;（全文的&hellip;都体现出了我的无法言说的无语感，仿佛变成了失语者，cue下蔡健雅~）</p>
<p>送走了小陈，日子没过多久，就又和一堆bro爬山了，这次是终南山，这个山其实我还蛮有兴趣的，想看看到底有没有活死人墓，结果上下山一路都在拍照，这是我买了相机后第一次旅游拍照，出了几张，凑合看吧。</p>
<h2 id="喝酒">喝酒</h2>
<p>去终南山是经过我们谋划的，那一夜，不知买了多少醉。也留下了这组精彩的照片。
img</p>
<p align="right" > - by Jaywxl</p>
<p align="right" > Fri,Apr 12 2024 </p>]]></content:encoded>
    </item>
    
    <item>
      <title>Notes | 读《苏轼传》感</title>
      <link>https://www.jaywxl.eu.org/posts/life/10_dong_po_ju_shi/</link>
      <pubDate>Mon, 13 Nov 2023 18:08:23 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/10_dong_po_ju_shi/</guid>
      <description>何来 想拽很多文，但肚子里墨水不够。hhh:) 前一段时间，想挑一本书看看，学习学习，虽然租赁了一间离省图很近的房子，但借书看对我来说，真的有些</description>
      <content:encoded><![CDATA[<h2 id="何来">何来</h2>
<p>想拽很多文，但肚子里墨水不够。hhh:)<br>
前一段时间，想挑一本书看看，学习学习，虽然租赁了一间离省图很近的房子，但借书看对我来说，真的有些囫囵吞枣的感觉，还没怎么看完、看明白就要归还了，且借书也是个难搞的过程，想看的借不到，只能匆匆在图书馆选一本。<br>
最近在那选了一本《台湾建筑史》，我只想说说&hellip;shit&hellip;，这是一本零几年的书，书中所讲的建筑史，大多属于明清时期的历史，最新的也是台北101大楼了。
我不知道这些建筑还留存多少。只记得好像荷兰来建了个“红毛城”（如果我没记错的话-_-），明清和福建往来密切，有大陆的建材、匠人前往建设，再后来就是日治时期（日本也去过，不知道这段历史欸），最后就是近代几个建筑师的介绍，什么学舍、图书馆、车站、纵贯线的公园、还有101大楼。101应该是他们较为骄傲的建筑了吧，在零几年的东方，建设亚洲最高的摩天大楼，其中甚至还包含佛教等等的思想，蛮不错的欸湾湾！<br>
我个人还是很喜欢台湾的，经济发达是有道理的，我也很喜欢宝岛的自然风光，人文景观，毕竟“一方水土养一方人”，谁不爱呢&hellip;</p>
<p>远了，没提到苏轼，索性再提下我最近看的一部剧集啦&ndash;《天道》，张志文、左小青演的，演技挺不错的，我认为张志文肯定是理解台词了的，不然怎么将演技和台词搭配的如此入境。</p>
<blockquote>
<p>神及道，道法自然，如是<br>
神及道，道即规律，遵规律者则为神</p>
</blockquote>
<p>下面这句是左小青的理解，元英遵规律，用农户式生产的方式，遵循消费者所在的市场规律、利用行业头部的运作规律，打倒了乐圣，形成了杀富济贫的效果。但真的济贫了吗，我认为否定的，那些扒着井口看一眼的人，再次摔了下去。<br>
救济的只是身体的贫穷、爱的贫穷。亚文、世杰思想富裕。<br>
要不鲁迅弃医从文 :(</p>
<p>说回苏轼啦！书的封面是这么评价的</p>
<blockquote>
<p>一蓑烟雨任平生<br>
苏轼的一生可以概括为，黄州惠州儋州</p>
</blockquote>
<p>就这样，我买了王水照先生的《苏轼转》与《苏轼选集》，想一睹超然的东坡居士，评评他是否有这境界🤣</p>
<h2 id="理解">理解</h2>
<p>最近做了两遍MBTI的测试，我是enfj，这很稀缺吗？她说全球只有3-5%。</p>
<h2 id="超脱">超脱</h2>
<p>苏轼被贬至密州，做了超然台记。超然我没读懂😂，我想这苏轼再怎么读《庄子》，也不能超然物外吧。
密州时期我最喜欢《江城子·密州出猎》。当然同期他还做了《兼怀子由》。</p>
<blockquote>
<p>老夫聊发少年狂，左牵黄，右擎苍，锦帽貂裘，千骑卷平冈。为报倾城随太守，亲射虎，看孙郎。
酒酣胸胆尚开张。鬓微霜，又何妨！持节云中，何日遣冯唐？会挽雕弓如满月，西北望，射天狼。</p>
</blockquote>
<p>此刻的出猎场景，描绘的狂。此时的苏轼心情，我想着伤。<br>
密州的环境比不上余杭，诗人在杭州赏尽湖光烟雨，喝遍美酿，尝遍佳肴，参加全了风雅集会。我是实名（Jw）羡慕的。<br>
钱塘江的春潮，戏水的弄潮儿；<br>
湖光山色中的千年古刹，端重的高僧。东坡在这过的挺爽的，从海南回来，是我我肯定选杭州乞居。</p>
<p>超脱是超脱不了了，我物欲很强的，hh<br>
我也经常去人迹罕至的山水林田湖草，我也相信“神及道，道法自然，如是”，可能我也超然吧。</p>
<p align="right" > - by Jaywxl</p>
<p align="right" > Mon,Nov 13 2023 </p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Notes | 一篇满分作文 --《在这里》</title>
      <link>https://www.jaywxl.eu.org/posts/life/9_long_ago_compostion/</link>
      <pubDate>Fri, 11 Aug 2023 21:38:29 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/9_long_ago_compostion/</guid>
      <description>一篇小学时看的满分作文，时乃至今，仍觉得惊为天人！&lt;br&gt;向长安，对秋灯，几人老</description>
      <content:encoded><![CDATA[<blockquote>
<p>在这里</p>
</blockquote>
<p>向长安，对秋灯，几人老？</p>
<p>这是一抔喧哗了千年的黄土，是十三朝顶礼膜拜的故都。这里秦时的明月正皎洁，汉代的城门正轻启。</p>
<p>秦始皇在这里挥剑浮云，东指六国，逐鹿中原；汉武帝在这里横剑漠北，踏碎匈奴铁骑的狼烟；张骞在这里拜别故里，逶迤西行，踩出丝绸之路曲折的痕迹；玄奘在这里打点行装，把大唐盛世的种子播撒向繁花如锦的天竺。无数人怀揣着无数瑰丽的梦，把鲜活的生命化作丹砂，镌刻在汗青竹简里。这里，万世流芳。</p>
<p>骊山的草木见证着，周幽烽火在这里戏取各路诸侯，褒姒倾国倾城的微笑揭开春秋乱世的序幕；大明宫殿前的麒麟目睹了，牡丹在这里不畏武皇淫威的铁骨铮铮，翩跹至洛阳而名动天下；华清池的海棠汤倒映过，杨贵妃在这里霓裳羽衣轻柔的魅影，断送一代盛世璀璨的华章；摆着酒座亭台楼阁回忆着，诗仙李白把酒当歌，绣口吐出半个盛唐的飘逸与洒脱。这是历史最绚丽的舞台，动人的故事演绎出一幕幕惊心动魄的诗行。这里，百转千回。</p>
<p>响彻高原的秦腔伴着埙声叙述着悠远的传说，羊肉泡馍的暖汤融化了柿子上凝结的火红的秋霜。摇着蒲扇的老人，敲着波浪鼓的孩子，细嗅沿街槐花飘香十里，踏过梧桐橙黄橘绿的落叶缤纷；踩着高跟鞋的白领丽人，捂着耳机灌输摇滚的学生，穿过滚滚而过的车烟肆虐，抬眼望摩天大楼里映出的云淡风轻。精彩的生活，融入一个个或悠闲或匆忙的背影，传递着生命的脉搏，为世界注入鲜活的血液。这里，异彩纷呈。</p>
<p>只有在这里，历史与现代才能如此完美地融合。如同古老的雁塔金铃声中飞扬的喷泉音乐，如同晨钟暮鼓的低吟浅唱里车流的喧嚣不息。</p>
<p>这里，是时间的灰烬，是历史的尘埃，沐浴着新时代的甘露，绽放出一朵崭新的明媚的芬芳。</p>
<p>这里，长安。</p>
<img src="/img_ankang/20230805_193352.avif" title="安康汉江_1">
]]></content:encoded>
    </item>
    
    <item>
      <title>Notes | 故地重游_汉中行</title>
      <link>https://www.jaywxl.eu.org/posts/life/8_bcak_here_again/</link>
      <pubDate>Thu, 10 Aug 2023 12:22:29 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/8_bcak_here_again/</guid>
      <description>故地重游，在人生的十字路口来到汉中，心里很是开心。这个地方还留存着步入社会的第一个脚印，今天走过了了旧人旧事老地方，交织着的回忆与现况，潸然泪下，以记此文</description>
      <content:encoded><![CDATA[<h2 id="缘起">缘起</h2>
<p>第一次来汉中是在22年的八月份，那年夏天很热。炎炎的烈日烤干了我最后的暑期，滚烫的热浪就迫不及待地卷着我走入这纷杂的社会。</p>
<p>刚进单位，在西安办完所有的手续，直接到汉中入职。 第一份工作主要是做传统的地质工作，搞搞边坡、削削坡、种种树，日子过得也算是快活。</p>
<p>梦魇的到来，事情比心里的预期更加让人难以接受——干地质调查，每天从大山深处抡着双腿，用双脚丈量祖国大地。</p>
<p>抚摸着葱葱郁郁的重峦叠嶂，聆听着清澈见底的曲水延绵。这是办公室同志们梦寐以求的工作。他们总说这像旅游一样。</p>
<!-- <img src="/img_hanzhong/xixiangxian/20221101_081536-01.avif" width="500">

<img src="/img_hanzhong/xixiangxian/20221101_100341-01.avif" style="width:500px;local"> -->
<p>
<link rel="stylesheet" href=https://www.jaywxl.eu.org/css/hugo-easy-gallery.css />

<div class="gallery caption-position-bottom caption-effect-slide hover-effect-zoom hover-transition" itemscope itemtype="http://schema.org/ImageGallery">
				<div class="box">
				  <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
				    <div class="img" style="background-image: url('https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221031_105914-02.webp');" >
				      <img itemprop="thumbnail" src="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221031_105914-02.webp" alt="20221031 105914 02" />
				    </div>
			      <figcaption>
		          <p>20221031 105914 02</p>
			      </figcaption>
				    <a href="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221031_105914-02.webp" itemprop="contentUrl"></a>
				  </figure>
				</div>
				<div class="box">
				  <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
				    <div class="img" style="background-image: url('https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221101_081536-01.webp');" >
				      <img itemprop="thumbnail" src="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221101_081536-01.webp" alt="20221101 081536 01" />
				    </div>
			      <figcaption>
		          <p>20221101 081536 01</p>
			      </figcaption>
				    <a href="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221101_081536-01.webp" itemprop="contentUrl"></a>
				  </figure>
				</div>
				<div class="box">
				  <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
				    <div class="img" style="background-image: url('https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221101_100341-01.webp');" >
				      <img itemprop="thumbnail" src="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221101_100341-01.webp" alt="20221101 100341 01" />
				    </div>
			      <figcaption>
		          <p>20221101 100341 01</p>
			      </figcaption>
				    <a href="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221101_100341-01.webp" itemprop="contentUrl"></a>
				  </figure>
				</div>
				<div class="box">
				  <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
				    <div class="img" style="background-image: url('https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221102_110120-01.webp');" >
				      <img itemprop="thumbnail" src="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221102_110120-01.webp" alt="20221102 110120 01" />
				    </div>
			      <figcaption>
		          <p>20221102 110120 01</p>
			      </figcaption>
				    <a href="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221102_110120-01.webp" itemprop="contentUrl"></a>
				  </figure>
				</div>
				<div class="box">
				  <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
				    <div class="img" style="background-image: url('https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221102_135843-01.webp');" >
				      <img itemprop="thumbnail" src="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221102_135843-01.webp" alt="20221102 135843 01" />
				    </div>
			      <figcaption>
		          <p>20221102 135843 01</p>
			      </figcaption>
				    <a href="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221102_135843-01.webp" itemprop="contentUrl"></a>
				  </figure>
				</div>
				<div class="box">
				  <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
				    <div class="img" style="background-image: url('https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_091958-01.webp');" >
				      <img itemprop="thumbnail" src="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_091958-01.webp" alt="20221103 091958 01" />
				    </div>
			      <figcaption>
		          <p>20221103 091958 01</p>
			      </figcaption>
				    <a href="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_091958-01.webp" itemprop="contentUrl"></a>
				  </figure>
				</div>
				<div class="box">
				  <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
				    <div class="img" style="background-image: url('https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_092144-01.webp');" >
				      <img itemprop="thumbnail" src="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_092144-01.webp" alt="20221103 092144 01" />
				    </div>
			      <figcaption>
		          <p>20221103 092144 01</p>
			      </figcaption>
				    <a href="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_092144-01.webp" itemprop="contentUrl"></a>
				  </figure>
				</div>
				<div class="box">
				  <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
				    <div class="img" style="background-image: url('https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_092206-01.webp');" >
				      <img itemprop="thumbnail" src="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_092206-01.webp" alt="20221103 092206 01" />
				    </div>
			      <figcaption>
		          <p>20221103 092206 01</p>
			      </figcaption>
				    <a href="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_092206-01.webp" itemprop="contentUrl"></a>
				  </figure>
				</div>
				<div class="box">
				  <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
				    <div class="img" style="background-image: url('https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_092440-01.webp');" >
				      <img itemprop="thumbnail" src="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_092440-01.webp" alt="20221103 092440 01" />
				    </div>
			      <figcaption>
		          <p>20221103 092440 01</p>
			      </figcaption>
				    <a href="https://www.jaywxl.eu.org//img_hanzhong/xixiangxian//20221103_092440-01.webp" itemprop="contentUrl"></a>
				  </figure>
				</div>
</div>

压弯的腰仍背负着生活，破旧的街道还承受着喧嚣。这是我感慨更深的生活。汗水播撒在土地，父子牵手于街巷，这是我爱的生活，纯粹的生活。（他们总会勾起我人文摄影的欲火，我知道我是个腊鸡啦qaq-_-）</p>
<p>100元人民币一层楼的住宿条件，满满当当的住着整个项目组。我辞职了，走的很决绝。<br>
wr
人们总是说“找好下家，再辞职”、“想清楚了，再辞职”。我不喜欢，我想不清楚，我想不清不楚。</p>
<h2 id="回忆">回忆</h2>
<p>23年的今天，下了D字头的动车，再一次来到这里，看着熟悉的街景，仿佛一切都没变，我也没变。我还是沉默害羞的，老同事们不敢再见了。以前会一个人悄悄地走在汉江漫滩；现在也是一个人悄悄地坐着吾悦广场的星巴克。
<figure>
    <img loading="lazy" src="/img_hanzhong/20230810_115302-01.avif"/> 
</figure>
</p>
<p>景色不错欧，看着（应该是4号桥）景色，路的那头是南郑，记忆中，那边有很多别墅和奇哥老婆所在的龙岗中学。不知道两口的小宝宝生下来了吗？不知道峰哥儿子的吉他学的怎么样了？不知道龙哥和对象结婚了吗？不知道尚哥混出头了吗？哈哈哈</p>
<p>人说工地上的人们总是情谊重的，确实，越艰辛的环境，越能凝结纯真的友谊。我喜欢，我想做一个纯粹的人。</p>
<h2 id="未知">未知</h2>
<ul>
<li>生活：之前的吉他还学的不明不白，喜欢的up也断更了（她是去拥抱生活了我怎么办呢）。</li>
<li>家人：家里的老人走了，妈妈却不那么伤心，“对于一个不能进食的古稀老人，饿着、痛苦着躺了一个月了，这种结果也是一种解脱”妈妈是一个很好的人，她胆怯却不懦弱；她自我但却充满善良。她从来都是身体力行，充满力量与希望，她很纯粹，纯粹的让人总是可怜她烦的傻（要好好待家人，每年做个体检，担起责任）。</li>
<li>工作：领导受够了国企的掣肘，准备摆脱桎梏（我可能又要挪地方了）。</li>
</ul>
<hr>
<p>前路迷惘，一切未知；</p>
<p>心怀热忱，披荆斩棘；</p>
<p>永远怀着纯粹的少年心！</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Music | 抱着你</title>
      <link>https://www.jaywxl.eu.org/posts/life/7_music_baozheni/</link>
      <pubDate>Wed, 01 Feb 2023 21:58:28 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/7_music_baozheni/</guid>
      <description>很久没写了，暂时搁置了转行的想法，回听起这首《抱着你》，提升不会放下，路也会沿着你的脚步想你铺来</description>
      <content:encoded><![CDATA[<h1 id="聊一聊这段时间">聊一聊这段时间</h1>
<p>前一段时间，一直在学习算法、数据库的相关知识，想着临门一脚，转型成功。
离职的这段时间，看了很多，看了很多自己，看了很多别人，浮躁，躺平，抖音&hellip;
又回到了地质行业，我已经心如死灰^`^
说点开心的吧：</p>
<blockquote>
<p>看了煤老板夺冠很开心，玩Xperia很开心，又好看的故事很开心
看到这位up很开心</p>
</blockquote>
<h1 id="聊一聊题目的歌">聊一聊题目的歌</h1>
<p>这个翻唱up我很喜欢她的嗓音，温暖人心，解决了精神内耗，转行的失败，生活所谓的孤寂，人生价值的泯灭
她的歌声可以抚慰我心</p>
<div class="bilibili">
    <iframe src="https://player.bilibili.com/player.html?bvid=BV1GK411S7Jp&page=1&as_wide=1&high_quality=1&danmaku=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="Bilibili Video" loading="lazy"></iframe>
</div>
<p>上一次的吉他学会了，就是弹唱对不上</p>
<h1 id="qaq">QAQ</h1>
<p>前天去喝了酒，又聊到了高中的姑娘，我想起了高中的你
想起了2022初的错过</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Music | 我想你要走了</title>
      <link>https://www.jaywxl.eu.org/posts/life/6_music_miaomiao/</link>
      <pubDate>Mon, 12 Dec 2022 18:42:24 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/6_music_miaomiao/</guid>
      <description>关于张悬_我想你要走了</description>
      <content:encoded><![CDATA[<hr>
<p><em>关于张悬_我想你要走了</em></p>
<hr>
<h2 id="part1_缘起时">Part1_缘起时</h2>
<p><em><strong>最近很喜欢的一位UP主，长相美丽舒适，声音温暖治愈。</strong></em></p>
<p><em><strong>对于人生十字路口的我给予了很多的温暖与慰藉</strong></em></p>
<p><em><strong>很高兴在这个世界、在这段时间遇上这么美丽的一位UP。</strong></em></p>
<p><em><strong>是的，在这个无人问津的角落</strong></em></p>
<p><em><strong>记录一下，我的荣幸与喜欢吧！🤣</strong></em></p>
<hr>
<div class="bilibili">
    <iframe src="https://player.bilibili.com/player.html?bvid=BV1Cv4y127iH&page=1&as_wide=1&high_quality=1&danmaku=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="Bilibili Video" loading="lazy"></iframe>
</div>
<h2 id="part2_情丝绕">Part2_情丝绕</h2>
<p><strong>hahah，有没有想起琅琊榜呢，这可真是太棒了呢</strong></p>
<p>去找了张悬这首歌的 吉他谱</p>
<p>顺嘴吐槽一下，我这吉他学的是真差劲，四月有余，和弦都按不明白</p>
<p>最终在这个网站找到了吉他谱<a href="https://www.flybuxiu.com/521.html" target="_blank" rel="noopener">(GO Here)👉</a>
</p>
<hr>
<img src="https://m.360buyimg.com/babel/jfs/t1/161698/8/33617/90581/63976503E5ef0a9f0/9d4441bc33d32696.jpg">
<h2 id="part3_">Part3_</h2>
<p><strong>还没想好起什么名字</strong></p>
<p><strong>当然是我自己的弹唱啦</strong></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Notes | 汉中小随笔</title>
      <link>https://www.jaywxl.eu.org/posts/life/5_firth/</link>
      <pubDate>Mon, 19 Sep 2022 20:48:05 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/5_firth/</guid>
      <description>感慨汉中的小生活😛</description>
      <content:encoded><![CDATA[<h1 id="时光笔记_1">时光笔记_1</h1>
<h3 id="生活小感慨">生活小感慨</h3>
<p>快乐的时光总是短暂的，进入了社会的小同志才知道学校的美好时光。那无忧无虑，那轻松惬意，那青春气息。</p>
<h3 id="美好小回忆">美好小回忆</h3>
<p>想起的都是美好的点点滴滴，当然是和男人的，男人在一起总是快乐的，一点小事，鸡毛蒜皮，相互阴阳怪气，相互恶心不已，确实那么的无法自拔，有人作陪那是极好的。</p>
<h3 id="未来小展望">未来小展望</h3>
<p>进入了工作当中，姜文说，谁会把秘密写到日记中去呀。（PS：有点想念上学看一步之遥的日子了），人在看的似懂非懂的时候是最装B的，就是不管生活之中遇到了什么情况，都得和差一步，一步之遥搭上关系。诶呀，又想歪了。前一阵儿，认识了个姑娘，当时喝多了晚上，唱歌认识的，就聊，硬聊。第二天，干什么都变得不一样了，和哥们打游戏都感觉变猛了。姑娘说：你是不是今天做的所有的事情都得和我搭上关系（呼应）。深思呀~~~，人是贱的，可能我是，总是把自己所期望的，变成所期望的，从而让自己认同期望的，太一厢情愿了，尤其是小男生，所以，才有了人生三大幻觉，所以，谨此告诫各位小男生，放弃幻想，认清现实，不要感动自我，更不要你以为。（哦又差题了）</p>
<p>聊未来，小弟进入了一家正在改制的事业单位，虽说也是央企，可学地质的进这种不是宛如喝凉水一般，我是不幸的，也是幸运的，作为49年入国军的我，在工作之中遇到这么多趣人趣事，最开心的莫过于，斗争就在你眼前。我发现现在的人都冲浪的很喜欢吃瓜，虽然与我无瓜，但他就是要吃一口。嗯，大戏就在我眼前，我终于体会到前排VIP的观感了，精彩，精彩绝伦。</p>
<p>听单位的前辈哥哥们说，他们看到我，就看到了十年前的自己，嗯，说不好，说不准未来如何，但我不求出彩，尽力精彩。</p>
<p>引用人民日报的一句话，做时代的弄潮儿，勇立潮头。</p>
<p align='right'>都说秘密不会写在日记里 -Jw  
<p align='right'>2022.09.19 21:14
]]></content:encoded>
    </item>
    
    <item>
      <title>Miniapp</title>
      <link>https://www.jaywxl.eu.org/posts/life/4_miniapp/</link>
      <pubDate>Wed, 29 Sep 2021 19:53:03 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/4_miniapp/</guid>
      <description>XUST 我在校园 请假小程序</description>
      <content:encoded><![CDATA[<h1 id="miniapp">miniapp</h1>
<h2 id="原网站jtjaywxlasiajtjaywxlasia因为校园保卫人员职业素养的提升网站形成的假条已经被废弃">原网站<a href="jt.jaywxl.asia">jt.jaywxl.asia</a>
,因为校园保卫人员职业素养的提升，网站形成的假条已经被废弃。</h2>
<p>现在已经将假条项目迁移至小程序。</p>
<ul>
<li>可以微信搜索Jaywxl</li>
<li>
<img src='/images/jaymini.jpg'>
</li>
</ul>
<hr>
<p>本项目所有源码都在GitHub开源(ps:后端还未完成push)
感谢各位校友的支持，请勿外传，有更好css想法的朋友，可以在下方评论！😘</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>XUST 自动打卡</title>
      <link>https://www.jaywxl.eu.org/posts/life/3_third/</link>
      <pubDate>Wed, 17 Feb 2021 13:31:44 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/life/3_third/</guid>
      <description>XUST 疫情期间 自动打卡</description>
      <content:encoded><![CDATA[<h1 id="xust实现全自动打卡">xust实现全自动打卡</h1>
<hr>
<blockquote>
<p>这是个令人激动的时刻对于我们来说<br>
这个项目让我们告别了每天繁琐的五点打卡<br>
导员的催促、班委的通知<br>
却也还是总让我们忘记，从而得到导员温柔的问候</p>
</blockquote>
<h2 id="font-color--pink接下来开始正体-font"><font color = 'pink'>接下来开始正体 </font></h2>
<p>所需软体和条件</p>
<ul>
<li>一个可以手机抓包的软件(<font color ='	#87CEFA'>ps:还没看pc版的西科e站包在哪里，后续可能回更新</font>)</li>
<li>你需要你个登录了西科e站的微信app</li>
<li>需要一个富强的环境(ps:当然GitHub也可以不，会很慢🤣🤣)</li>
</ul>
<hr>
<h3 id="1首先打开抓包软体找到如下图所示的包-获uid">1.首先打开抓包软体,找到如下图所示的包 获uid!</h3>
<p><figure><a class="lightgallery" href="https://tu.yaohuo.me/imgs/2021/02/d914926b9fd343d0.png" title="uidpc" data-thumbnail="https://tu.yaohuo.me/imgs/2021/02/d914926b9fd343d0.png" data-sub-html="<h2>uidpc</h2><p>uidpc</p>">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://tu.yaohuo.me/imgs/2021/02/d914926b9fd343d0.png"
            loading="lazy"
            title="uidpc"
            alt="https://tu.yaohuo.me/imgs/2021/02/d914926b9fd343d0.png" />
    </a><figcaption class="image-caption">uidpc</figcaption>
</figure>

<figure><a class="lightgallery" href="https://tu.yaohuo.me/imgs/2021/02/5c9aef7ecd88ad2f.png" title="uid1" data-thumbnail="https://tu.yaohuo.me/imgs/2021/02/5c9aef7ecd88ad2f.png" data-sub-html="<h2>uid1</h2><p>uid1</p>">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://tu.yaohuo.me/imgs/2021/02/5c9aef7ecd88ad2f.png"
            loading="lazy"
            title="uid1"
            alt="https://tu.yaohuo.me/imgs/2021/02/5c9aef7ecd88ad2f.png" />
    </a><figcaption class="image-caption">uid1</figcaption>
</figure>

<figure><a class="lightgallery" href="https://tu.yaohuo.me/imgs/2021/02/ff5296304a1ddd79.png" title="uid2" data-thumbnail="https://tu.yaohuo.me/imgs/2021/02/ff5296304a1ddd79.png" data-sub-html="<h2>uid2</h2><p>uid2</p>">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://tu.yaohuo.me/imgs/2021/02/ff5296304a1ddd79.png"
            loading="lazy"
            title="uid2"
            alt="https://tu.yaohuo.me/imgs/2021/02/ff5296304a1ddd79.png" />
    </a><figcaption class="image-caption">uid2</figcaption>
</figure>
</p>
<h3 id="2电脑登入西科e站f12点打卡提交后找到如下的包获得最下边的payload">2.电脑登入西科e站,f12,点打卡提交后,找到如下的包,获得最下边的payload!</h3>
<p><figure><a class="lightgallery" href="https://tu.yaohuo.me/imgs/2021/02/d4276c8006dd7b78.jpg" title="payload" data-thumbnail="https://tu.yaohuo.me/imgs/2021/02/d4276c8006dd7b78.jpg" data-sub-html="<h2>payload</h2><p>payload</p>">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://tu.yaohuo.me/imgs/2021/02/d4276c8006dd7b78.jpg"
            loading="lazy"
            title="payload"
            alt="https://tu.yaohuo.me/imgs/2021/02/d4276c8006dd7b78.jpg" />
    </a><figcaption class="image-caption">payload</figcaption>
</figure>
</p>
<h3 id="3有了上边两个步骤之后访问我的项目地址并且fork我的仓库checkinhttpsgithubcomvictor9578checkin并替换python文件里的uidpayload自此今后的打卡就会上传你payload的信息">3.有了上边两个步骤之后,访问我的项目地址,并且fork我的仓库<a href="https://github.com/Victor9578/checkin" target="_blank" rel="noopener">Checkin</a>
,并替换python文件里的uid,payload,自此今后的打卡就会上传你payload的信息!</h3>
<p><figure><a class="lightgallery" href="https://tu.yaohuo.me/imgs/2021/02/4c1536854078e033.png" title="GitHub" data-thumbnail="https://tu.yaohuo.me/imgs/2021/02/4c1536854078e033.png" data-sub-html="<h2>github</h2><p>GitHub</p>">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://tu.yaohuo.me/imgs/2021/02/4c1536854078e033.png"
            loading="lazy"
            title="GitHub"
            alt="https://tu.yaohuo.me/imgs/2021/02/4c1536854078e033.png" />
    </a><figcaption class="image-caption">GitHub</figcaption>
</figure>
</p>
<blockquote>
<blockquote>
<p><font color='#FFE4C4'>ps:当然你可以替换文件里的sckey,从此获得消息推送,如出现{}字符,即为打卡成功</font></p>
</blockquote>
</blockquote>
<hr>
<h1 id="感谢你的观看font-colorredfont">感谢你的观看<font color='red'>❤</font>😁</h1>
]]></content:encoded>
    </item>
    
    <item>
      <title>15_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/15_stu/</link>
      <pubDate>Thu, 15 Dec 2022 21:44:43 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/15_stu/</guid>
      <description>sql_Rank()函数 编写 SQL 查询对分数进行排序。排名按以下规则计算: 分数应按从高到低排列。 如果两个分数相等，那么两个分数的排名应该相同。 在</description>
      <content:encoded><![CDATA[<hr>
<h2 id="sql_rank函数">sql_Rank()函数</h2>
<p>编写 SQL 查询对分数进行排序。排名按以下规则计算:</p>
<p>分数应按从高到低排列。
如果两个分数相等，那么两个分数的排名应该相同。
在排名相同的分数后，排名数应该是下一个连续的整数。换句话说，排名之间不应该有空缺的数字。
按 score 降序返回结果表。</p>
<p>查询结果格式如下所示。</p>
<p> </p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">示例 1:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">输入: 
</span></span><span class="line"><span class="cl">Scores 表:
</span></span><span class="line"><span class="cl">+----+-------+
</span></span><span class="line"><span class="cl">| id | score |
</span></span><span class="line"><span class="cl">+----+-------+
</span></span><span class="line"><span class="cl">| 1  | 3.50  |
</span></span><span class="line"><span class="cl">| 2  | 3.65  |
</span></span><span class="line"><span class="cl">| 3  | 4.00  |
</span></span><span class="line"><span class="cl">| 4  | 3.85  |
</span></span><span class="line"><span class="cl">| 5  | 4.00  |
</span></span><span class="line"><span class="cl">| 6  | 3.65  |
</span></span><span class="line"><span class="cl">+----+-------+
</span></span><span class="line"><span class="cl">输出: 
</span></span><span class="line"><span class="cl">+-------+------+
</span></span><span class="line"><span class="cl">| score | rank |
</span></span><span class="line"><span class="cl">+-------+------+
</span></span><span class="line"><span class="cl">| 4.00  | 1    |
</span></span><span class="line"><span class="cl">| 4.00  | 1    |
</span></span><span class="line"><span class="cl">| 3.85  | 2    |
</span></span><span class="line"><span class="cl">| 3.65  | 3    |
</span></span><span class="line"><span class="cl">| 3.65  | 3    |
</span></span><span class="line"><span class="cl">| 3.50  | 4    |
</span></span><span class="line"><span class="cl">+-------+------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>来源：力扣（LeetCode）</p>
<p>链接：https://leetcode.cn/problems/rank-scores</p>
<p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<p><figure><a class="lightgallery" href="https://m.360buyimg.com/babel/jfs/t1/166268/22/29671/167571/639b2505Ea125be86/b722e14504a2c62c.png" title="rank" data-thumbnail="https://m.360buyimg.com/babel/jfs/t1/166268/22/29671/167571/639b2505Ea125be86/b722e14504a2c62c.png">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://m.360buyimg.com/babel/jfs/t1/166268/22/29671/167571/639b2505Ea125be86/b722e14504a2c62c.png"
            loading="lazy"
            title="rank"
            alt="https://m.360buyimg.com/babel/jfs/t1/166268/22/29671/167571/639b2505Ea125be86/b722e14504a2c62c.png" />
    </a><figcaption class="image-caption">rank</figcaption>
</figure>
</p>
<p>rank()相关函数的使用</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="k">Write</span><span class="w"> </span><span class="n">your</span><span class="w"> </span><span class="n">MySQL</span><span class="w"> </span><span class="n">query</span><span class="w"> </span><span class="k">statement</span><span class="w"> </span><span class="n">below</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">select</span><span class="w"> </span><span class="n">score</span><span class="p">,</span><span class="w"> </span><span class="n">dense_rank</span><span class="p">()</span><span class="w"> </span><span class="n">over</span><span class="w"> </span><span class="p">(</span><span class="k">order</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="n">score</span><span class="w"> </span><span class="k">desc</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="s1">&#39;rank&#39;</span><span class="w">  </span><span class="o">#</span><span class="err">这个</span><span class="n">rank之所以要加引号</span><span class="err">，因为</span><span class="n">rank本身是个函数</span><span class="err">，直接写</span><span class="n">rank会报错</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">from</span><span class="w"> </span><span class="n">scores</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">-- 异或这种count1前面的数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">select</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">Score</span><span class="p">,(</span><span class="k">select</span><span class="w"> </span><span class="k">count</span><span class="p">(</span><span class="k">distinct</span><span class="w"> </span><span class="n">b</span><span class="p">.</span><span class="n">Score</span><span class="p">)</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">Scores</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">b</span><span class="p">.</span><span class="n">Score</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">Score</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="s1">&#39;rank&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">from</span><span class="w"> </span><span class="n">Scores</span><span class="w"> </span><span class="n">a</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">order</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">Score</span><span class="w"> </span><span class="k">DESC</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>14_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/14_stu/</link>
      <pubDate>Mon, 12 Dec 2022 21:43:13 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/14_stu/</guid>
      <description>数组之求和为k的连续子数组数量 给你一个整数数组 nums 和一个整数 k ，请你统计并返回 该数组中和为 k 的连续子数组的个数 。 示例 1： 输入：nums = [1,1,1], k =</description>
      <content:encoded><![CDATA[<hr>
<h2 id="数组之求和为k的连续子数组数量">数组之求和为k的连续子数组数量</h2>
<p>给你一个整数数组 nums 和一个整数 k ，请你统计并返回 该数组中和为 k 的连续子数组的个数 。</p>
<p>示例 1：</p>
<p>输入：nums = [1,1,1], k = 2
输出：2</p>
<p>示例 2：</p>
<p>输入：nums = [1,2,3], k = 3
输出：2</p>
<p>来源：力扣（LeetCode）</p>
<p>链接：https://leetcode.cn/problems/subarray-sum-equals-k</p>
<p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<hr>
<blockquote>
<p>使用的原理就是 presum-k 若在 之前哈希表中的 presum 出现过 那么 必定有连续的数组和为k<br>
因为之前统计的presum为一段连续数组，现如今的presum同为连续数组，两个连续数组相减，和为k的数组也必为连续数组<br>
若presum在哈希表中不唯一 表示连续数组中出现了和为0的子数组。</p>
</blockquote>
<p><figure><a class="lightgallery" href="https://pic.leetcode-cn.com/1650818225-XIUNgx-image.png" title="111" data-thumbnail="https://pic.leetcode-cn.com/1650818225-XIUNgx-image.png">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://pic.leetcode-cn.com/1650818225-XIUNgx-image.png"
            loading="lazy"
            title="111"
            alt="https://pic.leetcode-cn.com/1650818225-XIUNgx-image.png" />
    </a><figcaption class="image-caption">111</figcaption>
</figure>
</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">subarraySum</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">],</span> <span class="n">k</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">prehash</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">prehash</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="n">preSum</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">nums</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">preSum</span> <span class="o">+=</span> <span class="n">num</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">preSum</span> <span class="o">-</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">prehash</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">count</span> <span class="o">+=</span> <span class="n">prehash</span><span class="p">[</span><span class="n">preSum</span> <span class="o">-</span> <span class="n">k</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">preSum</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">prehash</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">prehash</span><span class="p">[</span><span class="n">preSum</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">prehash</span><span class="p">[</span><span class="n">preSum</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">count</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>13_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/13_stu/</link>
      <pubDate>Sun, 11 Dec 2022 23:34:11 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/13_stu/</guid>
      <description>写一个高效的算法来搜索 m x n 矩阵 matrix 中的一个目标值 target 。该矩阵具有以下特性： 每行的元素从左到右升序排列。 每列的元素从上到下升序排列。 img 来源：力扣</description>
      <content:encoded><![CDATA[<hr>
<p>写一个高效的算法来搜索 m x n 矩阵 matrix 中的一个目标值 target 。该矩阵具有以下特性：</p>
<p>每行的元素从左到右升序排列。</p>
<p>每列的元素从上到下升序排列。
 
<figure><a class="lightgallery" href="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/11/25/searchgrid2.jpg" title="img" data-thumbnail="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/11/25/searchgrid2.jpg">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/11/25/searchgrid2.jpg"
            loading="lazy"
            title="img"
            alt="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/11/25/searchgrid2.jpg" />
    </a><figcaption class="image-caption">img</figcaption>
</figure>
</p>
<p>来源：力扣（LeetCode）</p>
<p>链接：https://leetcode.cn/problems/search-a-2d-matrix-ii</p>
<p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">* 二分法
</span></span></span><span class="line"><span class="cl"><span class="s2">* z字型搜索 从右上角 两个边界数值 一大一小的地方 开启搜索 各向异性
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Method_二分法</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">searchMatrix</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">matrix</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]],</span> <span class="n">target</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">bool</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">matrix</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">idx</span> <span class="o">=</span> <span class="n">bisect</span><span class="o">.</span><span class="n">bisect_left</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">idx</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">row</span><span class="p">)</span> <span class="ow">and</span> <span class="n">row</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">==</span> <span class="n">target</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Method_z字型法则</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">从右上角 或 左下角 开始搜索 满足两个方向的不同
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">searchMatrix</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">matrix</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]],</span> <span class="n">target</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">bool</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">matrix</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">matrix</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">        <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">m</span> <span class="ow">and</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">matrix</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">==</span> <span class="n">target</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">matrix</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">target</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">y</span> <span class="o">-=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">x</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="kc">False</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>12_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/12_stu/</link>
      <pubDate>Wed, 07 Dec 2022 17:10:59 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/12_stu/</guid>
      <description>01_二叉搜索树公共祖先 给定一个二叉搜索树, 找到该树中两个指定节点的最近公共祖先。 百度百科中最近公共祖先的定义为：“对于有根树 T 的两个结点 p</description>
      <content:encoded><![CDATA[<hr>
<h2 id="01_二叉搜索树公共祖先">01_二叉搜索树公共祖先</h2>
<p>给定一个二叉搜索树, 找到该树中两个指定节点的最近公共祖先。</p>
<p>百度百科中最近公共祖先的定义为：“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节点也可以是它自己的祖先）。”</p>
<p>例如，给定如下二叉搜索树:  root = [6,2,8,0,4,7,9,null,null,3,5]</p>
<p><figure><a class="lightgallery" href="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/binarysearchtree_improved.png" title="公共祖先" data-thumbnail="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/binarysearchtree_improved.png">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/binarysearchtree_improved.png"
            loading="lazy"
            title="公共祖先"
            alt="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/binarysearchtree_improved.png" />
    </a><figcaption class="image-caption">公共祖先</figcaption>
</figure>
</p>
<p>示例 1:</p>
<p>输入: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8
输出: 6
解释: 节点 2 和节点 8 的最近公共祖先是 6。</p>
<p>来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Definition for a binary tree node.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># class TreeNode:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     def __init__(self, x):</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         self.val = x</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         self.left = None</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         self.right = None</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">巧妙的运用了二叉树搜索的条件定义，左中右三个值的大小关系
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">lowestCommonAncestor</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">root</span><span class="p">:</span> <span class="s1">&#39;TreeNode&#39;</span><span class="p">,</span> <span class="n">p</span><span class="p">:</span> <span class="s1">&#39;TreeNode&#39;</span><span class="p">,</span> <span class="n">q</span><span class="p">:</span> <span class="s1">&#39;TreeNode&#39;</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="s1">&#39;TreeNode&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">small</span><span class="p">,</span><span class="n">big</span><span class="o">=</span><span class="p">(</span><span class="n">p</span><span class="p">,</span><span class="n">q</span><span class="p">)</span> <span class="k">if</span> <span class="n">p</span><span class="o">.</span><span class="n">val</span><span class="o">&lt;</span><span class="n">q</span><span class="o">.</span><span class="n">val</span> <span class="k">else</span> <span class="p">(</span><span class="n">q</span><span class="p">,</span><span class="n">p</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">small</span><span class="o">.</span><span class="n">val</span><span class="o">&lt;=</span><span class="n">root</span><span class="o">.</span><span class="n">val</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">big</span><span class="o">.</span><span class="n">val</span><span class="o">&gt;=</span><span class="n">root</span><span class="o">.</span><span class="n">val</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="n">root</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">lowestCommonAncestor</span><span class="p">(</span><span class="n">root</span><span class="o">.</span><span class="n">left</span><span class="p">,</span><span class="n">p</span><span class="p">,</span><span class="n">q</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">lowestCommonAncestor</span><span class="p">(</span><span class="n">root</span><span class="o">.</span><span class="n">right</span><span class="p">,</span><span class="n">p</span><span class="p">,</span><span class="n">q</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>11_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/11_stu/</link>
      <pubDate>Mon, 05 Dec 2022 20:22:14 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/11_stu/</guid>
      <description>动态规划之最少趟数</description>
      <content:encoded><![CDATA[<hr>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Target<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li><input checked="" disabled="" type="checkbox"> see 动态规划</li>
<li><input disabled="" type="checkbox"> init github&quot;stock_trade&quot; and ReadMe</li>
</ul>
</div>
        </div>
    </div>
<h2 id="02_路径总和">02_路径总和</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Definition for a binary tree node.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># class TreeNode:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     def __init__(self, val=0, left=None, right=None):</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         self.val = val</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         self.left = left</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         self.right = right</span>
</span></span><span class="line"><span class="cl"><span class="c1"># class Solution:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -&gt; bool:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         if root:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             targetSum = targetSum - root.val</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         else:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             return False</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         stack = []</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         sum = []</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         while root:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             print(root)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             a,b = float(&#39;-inf&#39;),float(&#39;-inf&#39;)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             if root.left: a = root.left.val</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             if root.right: b = root.right.val</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             if root.right and root.left:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 stack.append(root)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 sum.append(targetSum)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             if a &gt; b :</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 targetSum -= a</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 root = root.left</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             else:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 targetSum -= b</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 root = root.right</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             print(root)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             if targetSum != 0 and not root.left and not root.right and  stack:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 root = stack.pop()</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 targetSum = sum.pop()</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 if root.right.val &gt; root.left.val:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                     root.right = None</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 else:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                     root.left = None</span>
</span></span><span class="line"><span class="cl"><span class="c1">#             elif targetSum == 0 and not root.left and not root.right:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 return True </span>
</span></span><span class="line"><span class="cl"><span class="c1">#             elif targetSum != 0 and not root.left and not root.right:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                 return False</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">最终被击溃在两个子节点数值相等的问题上导致无法回溯，可以优化存在栈里面回溯的treenode，将选择的一边设为None
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">Method_递归</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">hasPathSum</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">root</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">TreeNode</span><span class="p">],</span> <span class="n">targetSum</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">bool</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="n">root</span><span class="p">:</span> <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="n">root</span><span class="o">.</span><span class="n">left</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">root</span><span class="o">.</span><span class="n">right</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">targetSum</span> <span class="o">==</span> <span class="n">root</span><span class="o">.</span><span class="n">val</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">hasPathSum</span><span class="p">(</span><span class="n">root</span><span class="o">.</span><span class="n">left</span><span class="p">,</span> <span class="n">targetSum</span> <span class="o">-</span> <span class="n">root</span><span class="o">.</span><span class="n">val</span><span class="p">)</span> <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">hasPathSum</span><span class="p">(</span><span class="n">root</span><span class="o">.</span><span class="n">right</span><span class="p">,</span> <span class="n">targetSum</span> <span class="o">-</span> <span class="n">root</span><span class="o">.</span><span class="n">val</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="02_搜索二叉树">02_搜索二叉树</h2>
<blockquote>
<p>搜索二叉树满足对于任意节点 root 而言，左子树（如果存在）上所有节点的值均小于 \textit{root.val}root.val，右子树（如果存在）上所有节点的值均大于 \textit{root.val}root.val，且它们都是二叉搜索树。
递归</p>
</blockquote>
<h2 id="init_stock_trade">init_stock_trade</h2>
]]></content:encoded>
    </item>
    
    <item>
      <title>10_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/10_stu/</link>
      <pubDate>Sat, 03 Dec 2022 15:39:25 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/10_stu/</guid>
      <description>二叉树递归、迭代的学习</description>
      <content:encoded><![CDATA[<hr>
<h1 id="二叉树">二叉树</h1>
<p><figure><a class="lightgallery" href="https://m.360buyimg.com/babel/jfs/t1/11877/31/20745/150895/638b3faeEfcb34dfc/3f604924123fd457.png" title="img" data-thumbnail="https://m.360buyimg.com/babel/jfs/t1/11877/31/20745/150895/638b3faeEfcb34dfc/3f604924123fd457.png">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://m.360buyimg.com/babel/jfs/t1/11877/31/20745/150895/638b3faeEfcb34dfc/3f604924123fd457.png"
            loading="lazy"
            title="img"
            alt="https://m.360buyimg.com/babel/jfs/t1/11877/31/20745/150895/638b3faeEfcb34dfc/3f604924123fd457.png" />
    </a><figcaption class="image-caption">img</figcaption>
</figure>
</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i><i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>最重点的内容就是：不管是先序中序还是后序，查找流程都是从上到下，先左后右。只是输出的时机不同。</p>
<p>先序就是发现了先输出，再先左后右。</p>
<p>中序就是发现了先存着，当左边遍历完了，再把存着的输出出来。</p>
<p>后序就是发现了先存着，当左边和右边都遍历完了，再把存着的输出出来。</p>
</div>
        </div>
    </div>
<h2 id="01_二叉树前序">01_二叉树前序</h2>
<p>Method:迭代</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">preorderTraversal</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">root</span><span class="p">:</span> <span class="n">TreeNode</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="n">root</span><span class="p">:</span> <span class="k">return</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="n">stack</span>  <span class="o">=</span> <span class="p">[</span><span class="n">root</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">res</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="n">stack</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">p</span> <span class="o">=</span> <span class="n">stack</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">res</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">val</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">p</span><span class="o">.</span><span class="n">right</span><span class="p">:</span> <span class="n">stack</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">right</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">p</span><span class="o">.</span><span class="n">left</span><span class="p">:</span> <span class="n">stack</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">left</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">res</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="02_二叉树中序">02_二叉树中序</h2>
<p>Method:递归</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">inorderTraversal</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">root</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">TreeNode</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="n">res</span><span class="o">=</span><span class="nb">list</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">def</span> <span class="nf">midorder</span><span class="p">(</span><span class="n">root</span><span class="p">:</span><span class="n">TreeNode</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="ow">not</span> <span class="n">root</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span>
</span></span><span class="line"><span class="cl">            <span class="n">midorder</span><span class="p">(</span><span class="n">root</span><span class="o">.</span><span class="n">left</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">res</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">root</span><span class="o">.</span><span class="n">val</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">midorder</span><span class="p">(</span><span class="n">root</span><span class="o">.</span><span class="n">right</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">midorder</span><span class="p">(</span><span class="n">root</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">res</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="03_二叉树后序">03_二叉树后序</h2>
<p>Method:迭代</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">postorderTraversal</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">root</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">TreeNode</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="n">res</span><span class="o">=</span><span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="n">root</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">res</span>
</span></span><span class="line"><span class="cl">        <span class="n">node</span><span class="o">=</span><span class="n">root</span>
</span></span><span class="line"><span class="cl">        <span class="n">stack</span><span class="o">=</span><span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="n">stack</span> <span class="ow">or</span> <span class="n">node</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">while</span> <span class="n">node</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">res</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node</span><span class="o">.</span><span class="n">val</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">stack</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">node</span><span class="o">=</span><span class="n">node</span><span class="o">.</span><span class="n">right</span>
</span></span><span class="line"><span class="cl">            <span class="n">node</span><span class="o">=</span><span class="n">stack</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">node</span><span class="o">=</span><span class="n">node</span><span class="o">.</span><span class="n">left</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">res</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>08_09_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/08_09_stu/</link>
      <pubDate>Thu, 01 Dec 2022 16:10:39 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/08_09_stu/</guid>
      <description>链表</description>
      <content:encoded><![CDATA[<hr>
<h2 id="01_栈_哈希表_有效括号">01_栈_哈希表_有效括号</h2>
<p>给定一个只包括 &lsquo;(&rsquo;，&rsquo;)&rsquo;，&rsquo;{&rsquo;，&rsquo;}&rsquo;，&rsquo;[&rsquo;，&rsquo;]&rsquo; 的字符串 s ，判断字符串是否有效。</p>
<p>有效字符串需满足：</p>
<p>左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
每个右括号都有一个对应的相同类型的左括号。
 </p>
<p>示例 1：</p>
<p>输入：s = &ldquo;()&rdquo;
输出：true</p>
<p>示例 2：</p>
<p>输入：s = &ldquo;()[]{}&rdquo;
输出：true</p>
<p>示例 3：</p>
<p>输入：s = &ldquo;(]&rdquo;
输出：false</p>
<p>来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/valid-parentheses
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>栈的思想<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>{([])} 利用先进后出的原则来判断括号是否闭合</p>
<p>每个stack的-1位置需要和dic字典里的键值对相互对应</p>
</div>
        </div>
    </div></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">isValid</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">bool</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">dic</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;)&#39;</span><span class="p">:</span><span class="s1">&#39;(&#39;</span><span class="p">,</span><span class="s1">&#39;]&#39;</span><span class="p">:</span><span class="s1">&#39;[&#39;</span><span class="p">,</span><span class="s1">&#39;}&#39;</span><span class="p">:</span><span class="s1">&#39;{&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">stack</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">s</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">stack</span> <span class="ow">and</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">dic</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">dic</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span> <span class="n">stack</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span> 
</span></span><span class="line"><span class="cl">                <span class="k">else</span><span class="p">:</span> <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span> <span class="n">stack</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="ow">not</span> <span class="n">stack</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>07_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/07_stu/</link>
      <pubDate>Wed, 30 Nov 2022 16:32:38 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/07_stu/</guid>
      <description>开启链表的学习主要是快慢指针方法 或者 用哈希表的方法</description>
      <content:encoded><![CDATA[<h2 id="1_链表_判断是否有环">1_链表_判断是否有环</h2>
<p>开启链表的学习主要是快慢指针方法 或者 用哈希表的方法
<figure><a class="lightgallery" href="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist.png" title="leecode_链表" data-thumbnail="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist.png" data-sub-html="<h2>leecode_链表</h2><p>leecode_链表</p>">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist.png"
            loading="lazy"
            title="leecode_链表"
            alt="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/07/circularlinkedlist.png" />
    </a><figcaption class="image-caption">leecode_链表</figcaption>
</figure>
<br>
输入：head = [3,2,0,-4], pos = 1
输出：true
解释：链表中有一个环，其尾部连接到第二个节点。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Definition for singly-linked list.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># class ListNode:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     def __init__(self, x):</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         self.val = x</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         self.next = None</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">hasCycle</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">head</span><span class="p">:</span> <span class="n">ListNode</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">bool</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1"># 空链表或链表只有一个节点，无环</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="n">head</span> <span class="ow">or</span> <span class="n">head</span><span class="o">.</span><span class="n">next</span> <span class="o">==</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1"># 初始化快慢指针</span>
</span></span><span class="line"><span class="cl">        <span class="n">fast</span> <span class="o">=</span> <span class="n">slow</span> <span class="o">=</span> <span class="n">head</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1"># 如果不存在环，肯定 fast 先指向 null</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 细节：fast 每次走 2 步，所以要确定 fast 和 fast.next 不为空，不然会报执行出错。</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="n">fast</span> <span class="ow">and</span> <span class="n">fast</span><span class="o">.</span><span class="n">next</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># 快指针移动 2 步，慢指针移动 1 步</span>
</span></span><span class="line"><span class="cl">            <span class="n">fast</span> <span class="o">=</span> <span class="n">fast</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span>
</span></span><span class="line"><span class="cl">            <span class="n">slow</span> <span class="o">=</span> <span class="n">slow</span><span class="o">.</span><span class="n">next</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># 快慢指针相遇，有环</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">fast</span> <span class="o">==</span> <span class="n">slow</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> 
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="2_链表递归">2_链表递归</h2>
<p>给你一个链表的头节点 head 和一个整数 val ，请你删除链表中所有满足 Node.val == val 的节点，并返回 新的头节点 。
 </p>
<p>示例 1：
<figure><a class="lightgallery" href="https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg" title="2" data-thumbnail="https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg" data-sub-html="<h2>链表删除</h2><p>2</p>">
        <img
            class="lazy"
            src="/svg/loading.min.svg"
            data-src="https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg"
            loading="lazy"
            title="2"
            alt="https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg" />
    </a><figcaption class="image-caption">2</figcaption>
</figure>
</p>
<p>输入：head = [1,2,6,3,4,5,6], val = 6
输出：[1,2,3,4,5]
示例 2：</p>
<p>输入：head = [], val = 1
输出：[]
示例 3：</p>
<p>输入：head = [7,7,7,7], val = 7
输出：[]</p>
<p>来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/remove-linked-list-elements
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">removeElements</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">head</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">ListNode</span><span class="p">],</span> <span class="n">val</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Optional</span><span class="p">[</span><span class="n">ListNode</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="n">head</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">head</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">head</span><span class="o">.</span><span class="n">val</span> <span class="o">==</span> <span class="n">val</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">head</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">removeElements</span><span class="p">(</span><span class="n">head</span><span class="o">.</span><span class="n">next</span><span class="p">,</span><span class="n">val</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">head</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># self.removeElements(head.next,val)  错误是否需要前面先赋值，否则return的怎么返回 eg下方正确方式</span>
</span></span><span class="line"><span class="cl">            <span class="n">head</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">removeElements</span><span class="p">(</span><span class="n">head</span><span class="o">.</span><span class="n">next</span><span class="p">,</span><span class="n">val</span><span class="p">)</span> 
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">head</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>06_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/06_stu/</link>
      <pubDate>Tue, 29 Nov 2022 14:07:55 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/06_stu/</guid>
      <description>01_adddate 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 输入： Weather 表： +----+------------+-------------+ | id | recordDate | Temperature | +----+------------+-------------+ | 1 | 2015-01-01 | 10 | | 2 | 2015-01-02 | 25 | | 3 | 2015-01-03 | 20 | | 4 | 2015-01-04 | 30 | +----+------------+-------------+ 输</description>
      <content:encoded><![CDATA[<hr>
<h2 id="01_adddate">01_adddate</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">输入：  
</span></span><span class="line"><span class="cl">Weather 表：  
</span></span><span class="line"><span class="cl">+----+------------+-------------+
</span></span><span class="line"><span class="cl">| id | recordDate | Temperature |
</span></span><span class="line"><span class="cl">+----+------------+-------------+
</span></span><span class="line"><span class="cl">| 1  | 2015-01-01 | 10          |
</span></span><span class="line"><span class="cl">| 2  | 2015-01-02 | 25          |
</span></span><span class="line"><span class="cl">| 3  | 2015-01-03 | 20          |
</span></span><span class="line"><span class="cl">| 4  | 2015-01-04 | 30          |
</span></span><span class="line"><span class="cl">+----+------------+-------------+
</span></span><span class="line"><span class="cl">输出：
</span></span><span class="line"><span class="cl">+----+
</span></span><span class="line"><span class="cl">| id |
</span></span><span class="line"><span class="cl">+----+
</span></span><span class="line"><span class="cl">| 2  |
</span></span><span class="line"><span class="cl">| 4  |
</span></span><span class="line"><span class="cl">+----+
</span></span><span class="line"><span class="cl">解释：
</span></span><span class="line"><span class="cl">2015-01-02 的温度比前一天高（10 -&gt; 25）
</span></span><span class="line"><span class="cl">2015-01-04 的温度比前一天高（20 -&gt; 30）
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">来源：力扣（LeetCode）
</span></span><span class="line"><span class="cl">链接：https://leetcode.cn/problems/rising-temperature
</span></span><span class="line"><span class="cl">著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- ADDDATE函数日期增加
</span></span></span><span class="line"><span class="cl"><span class="c1">-- inner join内连接 会删除没有匹配的项 不会保留null
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">id</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">from</span><span class="w"> </span><span class="n">Weather</span><span class="w"> </span><span class="n">w1</span><span class="w"> </span><span class="k">left</span><span class="w"> </span><span class="k">join</span><span class="w"> </span><span class="p">(</span><span class="k">SELECT</span><span class="w"> </span><span class="n">ADDDATE</span><span class="p">(</span><span class="n">recordDate</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">uid</span><span class="p">,</span><span class="n">Temperature</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">t</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">Weather</span><span class="p">)</span><span class="n">w2</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">w1</span><span class="p">.</span><span class="n">recordDate</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">w2</span><span class="p">.</span><span class="n">uid</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w"> </span><span class="n">Temperature</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">t</span><span class="p">;</span><span class="w"> 
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="02_判断两个字符串中元素是否一样多">02_判断两个字符串中元素是否一样多</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">collections</span>
</span></span><span class="line"><span class="cl"><span class="n">s</span> <span class="o">=</span> <span class="s2">&#34;ab&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">t</span> <span class="o">=</span> <span class="s2">&#34;ba&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">firstUniqChar</span><span class="p">(</span> <span class="n">s</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="n">t</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">bool</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># print(sorted(collections.Counter(t).most_common()))</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># print(collections.Counter(t).most_common())      sorted()排序</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">collections</span><span class="o">.</span><span class="n">Counter</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="o">.</span><span class="n">most_common</span><span class="p">())</span> <span class="o">==</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">collections</span><span class="o">.</span><span class="n">Counter</span><span class="p">(</span><span class="n">t</span><span class="p">)</span><span class="o">.</span><span class="n">most_common</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">Solution</span><span class="o">.</span><span class="n">firstUniqChar</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">t</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>05_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/05_stu/</link>
      <pubDate>Mon, 28 Nov 2022 16:55:58 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/05_stu/</guid>
      <description>&amp;hellip; 01_sql 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 给定一个表 tree，id 是树节点的编号， p_id 是它父节点的 id 。 +----+------+ | id | p_id | +----+------+</description>
      <content:encoded><![CDATA[<h1 id="heading">&hellip;</h1>
<hr>
<h2 id="01_sql">01_sql</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">给定一个表 tree，id 是树节点的编号， p_id 是它父节点的 id 。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">+----+------+
</span></span><span class="line"><span class="cl">| id | p_id |
</span></span><span class="line"><span class="cl">+----+------+
</span></span><span class="line"><span class="cl">| 1  | null |
</span></span><span class="line"><span class="cl">| 2  | 1    |
</span></span><span class="line"><span class="cl">| 3  | 1    |
</span></span><span class="line"><span class="cl">| 4  | 2    |
</span></span><span class="line"><span class="cl">| 5  | 2    |
</span></span><span class="line"><span class="cl">+----+------+
</span></span><span class="line"><span class="cl">树中每个节点属于以下三种类型之一：
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">叶子：如果这个节点没有任何孩子节点。
</span></span><span class="line"><span class="cl">根：如果这个节点是整棵树的根，即没有父节点。
</span></span><span class="line"><span class="cl">内部节点：如果这个节点既不是叶子节点也不是根节点。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">写一个查询语句，输出所有节点的编号和节点的类型，并将结果按照节点编号排序。上面样例的结果为：
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">+----+------+
</span></span><span class="line"><span class="cl">| id | Type |
</span></span><span class="line"><span class="cl">+----+------+
</span></span><span class="line"><span class="cl">| 1  | Root |
</span></span><span class="line"><span class="cl">| 2  | Inner|
</span></span><span class="line"><span class="cl">| 3  | Leaf |
</span></span><span class="line"><span class="cl">| 4  | Leaf |
</span></span><span class="line"><span class="cl">| 5  | Leaf |
</span></span><span class="line"><span class="cl">+----+------+
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">来源：力扣（LeetCode）
</span></span><span class="line"><span class="cl">链接：https://leetcode.cn/problems/tree-node
</span></span><span class="line"><span class="cl">著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- case when Method
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">select</span><span class="w"> </span><span class="n">id</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">case</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">when</span><span class="w"> </span><span class="n">p_id</span><span class="w"> </span><span class="k">is</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">then</span><span class="w"> </span><span class="s1">&#39;Root&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">when</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="k">select</span><span class="w"> </span><span class="n">atree</span><span class="p">.</span><span class="n">p_id</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">tree</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">atree</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">)</span><span class="w"> </span><span class="k">then</span><span class="w"> </span><span class="s1">&#39;Inner&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">else</span><span class="w"> </span><span class="s1">&#39;Leaf&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">end</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="k">type</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">from</span><span class="w"> </span><span class="n">tree</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">-- if else Method
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">id</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">IF</span><span class="p">(</span><span class="n">p_id</span><span class="w"> </span><span class="k">IS</span><span class="w"> </span><span class="k">NULL</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="s1">&#39;Root&#39;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">IF</span><span class="p">(</span><span class="n">id</span><span class="w"> </span><span class="k">IN</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="k">SELECT</span><span class="w"> </span><span class="k">DISTINCT</span><span class="w"> </span><span class="n">p_id</span><span class="w">  </span><span class="k">FROM</span><span class="w"> </span><span class="n">tree</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="k">WHERE</span><span class="w"> </span><span class="n">p_id</span><span class="w"> </span><span class="k">IS</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="p">),</span><span class="s1">&#39;Inner&#39;</span><span class="p">,</span><span class="s1">&#39;Leaf&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="k">Type</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w"> </span><span class="n">tree</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="02_limit_offset_sql">02_limit_offset_sql</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Employee 表：
</span></span><span class="line"><span class="cl">+-------------+------+
</span></span><span class="line"><span class="cl">| Column Name | Type |
</span></span><span class="line"><span class="cl">+-------------+------+
</span></span><span class="line"><span class="cl">| id          | int  |
</span></span><span class="line"><span class="cl">| salary      | int  |
</span></span><span class="line"><span class="cl">+-------------+------+
</span></span><span class="line"><span class="cl">id 是这个表的主键。
</span></span><span class="line"><span class="cl">表的每一行包含员工的工资信息。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">编写一个 SQL 查询，获取并返回 Employee 表中第二高的薪水 。如果不存在第二高的薪水，查询应该返回 null 。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">查询结果如下例所示。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">示例 1：
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">输入：
</span></span><span class="line"><span class="cl">Employee 表：
</span></span><span class="line"><span class="cl">+----+--------+
</span></span><span class="line"><span class="cl">| id | salary |
</span></span><span class="line"><span class="cl">+----+--------+
</span></span><span class="line"><span class="cl">| 1  | 100    |
</span></span><span class="line"><span class="cl">| 2  | 200    |
</span></span><span class="line"><span class="cl">| 3  | 300    |
</span></span><span class="line"><span class="cl">+----+--------+
</span></span><span class="line"><span class="cl">输出：
</span></span><span class="line"><span class="cl">+---------------------+
</span></span><span class="line"><span class="cl">| SecondHighestSalary |
</span></span><span class="line"><span class="cl">+---------------------+
</span></span><span class="line"><span class="cl">| 200                 |
</span></span><span class="line"><span class="cl">+---------------------+
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">来源：力扣（LeetCode）
</span></span><span class="line"><span class="cl">链接：https://leetcode.cn/problems/second-highest-salary
</span></span><span class="line"><span class="cl">著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- LIMIT 返回一步 OFFSET 跳过一步 DESC 倒序排列
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">(</span><span class="k">SELECT</span><span class="w"> </span><span class="k">DISTINCT</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">Salary</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">FROM</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">Employee</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">ORDER</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">Salary</span><span class="w"> </span><span class="k">DESC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">LIMIT</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">OFFSET</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">SecondHighestSalary</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="03_数独游戏">03_数独游戏</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">isValidSudoku</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">board</span> <span class="o">=</span> <span class="p">[[</span><span class="s2">&#34;8&#34;</span><span class="p">,</span><span class="s2">&#34;3&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;7&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">,[</span><span class="s2">&#34;6&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;1&#34;</span><span class="p">,</span><span class="s2">&#34;9&#34;</span><span class="p">,</span><span class="s2">&#34;5&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">,[</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;9&#34;</span><span class="p">,</span><span class="s2">&#34;8&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;6&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">,[</span><span class="s2">&#34;8&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;6&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;3&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">,[</span><span class="s2">&#34;4&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;8&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;3&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;1&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">,[</span><span class="s2">&#34;7&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;2&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;6&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">,[</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;6&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;2&#34;</span><span class="p">,</span><span class="s2">&#34;8&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">,[</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;4&#34;</span><span class="p">,</span><span class="s2">&#34;1&#34;</span><span class="p">,</span><span class="s2">&#34;9&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;5&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">,[</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;8&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;.&#34;</span><span class="p">,</span><span class="s2">&#34;7&#34;</span><span class="p">,</span><span class="s2">&#34;9&#34;</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">哈希算法 row,col,block分别生成的依据是9行*9个数字、9列*9个数字、9块*9个数字
</span></span></span><span class="line"><span class="cl"><span class="s1">在判断相同行列块中数字是否变成了赋值的1 从而return
</span></span></span><span class="line"><span class="cl"><span class="s1">不能 使用 [[0] *9]*9 这样第二个九相当于引用了9遍列表[[0] * 9] 会出现修改后数值都变 exp: [[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0]]
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="n">row</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">9</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">9</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="n">col</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">9</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">9</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="n">block</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">9</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">9</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">9</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">9</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="s1">&#39;.&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">num</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">])</span> <span class="o">-</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">b</span> <span class="o">=</span> <span class="p">(</span><span class="n">i</span> <span class="o">//</span> <span class="mi">3</span><span class="p">)</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="n">j</span> <span class="o">//</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">row</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">num</span><span class="p">]</span> <span class="ow">or</span> <span class="n">col</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">num</span><span class="p">]</span> <span class="ow">or</span> <span class="n">block</span><span class="p">[</span><span class="n">b</span><span class="p">][</span><span class="n">num</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">                    <span class="nb">print</span><span class="p">(</span><span class="n">block</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">                <span class="n">row</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">num</span><span class="p">]</span> <span class="o">=</span> <span class="n">col</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">num</span><span class="p">]</span> <span class="o">=</span> <span class="n">block</span><span class="p">[</span><span class="n">b</span><span class="p">][</span><span class="n">num</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">Method 2 ： 生成三种数组，再将合并成一种数组，遍历其中的counter，看每个的计数情况是否为 0，1
</span></span></span><span class="line"><span class="cl"><span class="s1">改进 判断哈希赋值 32ms,99%
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># n = list(map(list,zip(*board)))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># nn,nnn = [],[]</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># for a in board:</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#     nn += a</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># ab = [nn[i:i+3] for i in range(0,len(nn),3)]</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># for b in [0,1,2,9,10,11,18,19,20]:</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#     nnn += [ab[b]+ab[b+3]+ab[b+6]]</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># num = board+n+nnn</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">num</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">nnnn</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="mi">9</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">i</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">a</span> <span class="o">!=</span> <span class="s1">&#39;.&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">nnnn</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">                <span class="n">nnnn</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># rs = 0</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># for a in range(len(num)):</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#         count = Counter(num[a])</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#         for i in range(1,10):</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#             if count[str(i)] not in [0,1]:</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#                     rs += 1</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#                     return False</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#             else: continue</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># if rs == 0 : return True</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>04_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/04_stu/</link>
      <pubDate>Sun, 27 Nov 2022 23:32:54 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/04_stu/</guid>
      <description>01_数组切片分组 1 2 3 4 5 6 7 8 9 10 11 12 mat = [[1,2],[3,4],[5,6]] r,c = 2,3 ans = [[0]*c for _ in range(r)] a = [] class Solution: def matrixReshape(self, mat: List[List[int]], r: int, c: int) -&amp;gt; List[List[int]]: if len(mat)*len(mat[0]) == r*c : for i in mat: a +=i return [a[i:i + c] for i in range(0, len(a), c)]</description>
      <content:encoded><![CDATA[<hr>
<h2 id="01_数组切片分组">01_数组切片分组</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">mat</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl"><span class="n">r</span><span class="p">,</span><span class="n">c</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span><span class="mi">3</span>
</span></span><span class="line"><span class="cl"><span class="n">ans</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">c</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">r</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">a</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">matrixReshape</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mat</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]],</span> <span class="n">r</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">c</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]]:</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span><span class="o">*</span><span class="nb">len</span><span class="p">(</span><span class="n">mat</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">==</span> <span class="n">r</span><span class="o">*</span><span class="n">c</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">mat</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">a</span> <span class="o">+=</span><span class="n">i</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">[</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">i</span> <span class="o">+</span> <span class="n">c</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">a</span><span class="p">),</span> <span class="n">c</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span> <span class="k">return</span> <span class="n">mat</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="02_杨辉三角">02_杨辉三角</h2>
<blockquote>
<p>杨辉三角<br>
弄清yieid 和 return 区别 yieid可迭代</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">triangles</span><span class="p">(</span><span class="n">b</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">L</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>              <span class="c1">#定义L为一个只包含一个元素的列表</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">            <span class="k">yield</span> <span class="n">L</span>          <span class="c1">#定义为生成器函数</span>
</span></span><span class="line"><span class="cl">            <span class="n">L</span> <span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="n">L</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">+</span> <span class="n">L</span><span class="p">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">L</span><span class="p">))]</span> <span class="o">+</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">generate</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">numRows</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">list</span><span class="p">[</span><span class="nb">list</span><span class="p">[</span><span class="nb">int</span><span class="p">]]:</span>
</span></span><span class="line"><span class="cl">        <span class="n">n</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">Solution</span><span class="o">.</span><span class="n">triangles</span><span class="p">(</span><span class="n">numRows</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">n</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">n</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 方法二 简化</span>
</span></span><span class="line"><span class="cl">        <span class="n">L</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>              <span class="c1">#定义L为一个只包含一个元素的列表</span>
</span></span><span class="line"><span class="cl">        <span class="n">n</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">            <span class="n">n</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">L</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">L</span> <span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="n">L</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">+</span> <span class="n">L</span><span class="p">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">L</span><span class="p">))]</span> <span class="o">+</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">n</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>03_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/03_stu/</link>
      <pubDate>Sun, 27 Nov 2022 18:14:59 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/03_stu/</guid>
      <description>01_返回交集 给你两个整数数组 nums1 和 nums2 ，请你以数组形式返回两数组的交集。返回结果中每个元素出现的次数，应与元素在两个数组中都出现的次数一致（如</description>
      <content:encoded><![CDATA[<hr>
<h2 id="01_返回交集">01_返回交集</h2>
<p>给你两个整数数组 nums1 和 nums2 ，请你以数组形式返回两数组的交集。返回结果中每个元素出现的次数，应与元素在两个数组中都出现的次数一致（如果出现次数不一致，则考虑取较小值）。可以不考虑输出结果的顺序。 </p>
<p>示例 1：</p>
<p>输入：nums1 = [1,2,2,1], nums2 = [2,2]
输出：[2,2]
示例 2:</p>
<p>输入：nums1 = [4,9,5], nums2 = [9,4,9,8,4]
输出：[4,9]</p>
<p>来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/intersection-of-two-arrays-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">Counter</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">collections</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">nums1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">nums2</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">nn</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="n">n</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">count</span> <span class="o">=</span> <span class="n">Counter</span><span class="p">(</span><span class="n">nums1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">count</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="n">ans</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">nums2</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">count</span><span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">count</span><span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">ans</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span> <span class="o">=</span> <span class="p">(</span><span class="n">collections</span><span class="o">.</span><span class="n">Counter</span><span class="p">(</span><span class="n">nums1</span><span class="p">)</span><span class="o">&amp;</span><span class="n">collections</span><span class="o">.</span><span class="n">Counter</span><span class="p">(</span><span class="n">nums2</span><span class="p">))</span><span class="o">.</span><span class="n">elements</span><span class="p">()</span> <span class="c1"># 一行代码</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">d</span> <span class="o">=</span> <span class="n">nums1</span><span class="o">&amp;</span><span class="n">nums2</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="02_concat_upper_lower_sql">02_concat_upper_lower_sql</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="n">CONCAT</span><span class="w"> </span><span class="o">#</span><span class="w"> </span><span class="err">拼接字符串</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">LEFT</span><span class="p">,</span><span class="k">RIGHT</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">UPPER</span><span class="p">,</span><span class="k">LOWER</span><span class="w"> </span><span class="o">#</span><span class="w"> </span><span class="err">大写，小写</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">select</span><span class="w"> </span><span class="n">user_id</span><span class="p">,</span><span class="w"> </span><span class="n">CONCAT</span><span class="p">(</span><span class="k">UPPER</span><span class="p">(</span><span class="k">left</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">)),</span><span class="w"> </span><span class="k">LOWER</span><span class="p">(</span><span class="k">RIGHT</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="k">length</span><span class="p">(</span><span class="n">name</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="mi">1</span><span class="p">)))</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">from</span><span class="w"> </span><span class="n">Users</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">order</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="n">user_id</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="03_sql">03_sql</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- group_concat 字符串连接
</span></span></span><span class="line"><span class="cl"><span class="c1">-- group by 分组
</span></span></span><span class="line"><span class="cl"><span class="c1">-- count 统计
</span></span></span><span class="line"><span class="cl"><span class="c1">-- distinct 去重
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">select</span><span class="w"> </span><span class="n">sell_date</span><span class="p">,</span><span class="w"> </span><span class="k">count</span><span class="p">(</span><span class="k">distinct</span><span class="p">(</span><span class="n">product</span><span class="p">))</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">num_sold</span><span class="p">,</span><span class="w"> </span><span class="n">group_concat</span><span class="p">(</span><span class="k">distinct</span><span class="w"> </span><span class="n">product</span><span class="w"> </span><span class="k">order</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="n">product</span><span class="w"> </span><span class="k">asc</span><span class="w"> </span><span class="n">separator</span><span class="w"> </span><span class="s1">&#39;,&#39;</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">products</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">from</span><span class="w"> </span><span class="n">Activities</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">group</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="n">sell_date</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="04_sql">04_sql</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">select</span><span class="w"> </span><span class="n">patient_id</span><span class="p">,</span><span class="n">patient_name</span><span class="p">,</span><span class="n">conditions</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">from</span><span class="w"> </span><span class="n">PAtients</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">where</span><span class="w"> </span><span class="n">conditions</span><span class="w"> </span><span class="n">regexp</span><span class="w"> </span><span class="s1">&#39;^DIAB1|\\sDIAB1&#39;</span><span class="p">;</span><span class="w"> </span><span class="o">#</span><span class="w"> </span><span class="err">正则表达式</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">where</span><span class="w"> </span><span class="n">conditions</span><span class="w"> </span><span class="k">like</span><span class="w"> </span><span class="s1">&#39;DIAB1%&#39;</span><span class="w"> </span><span class="k">or</span><span class="w"> </span><span class="n">conditions</span><span class="w"> </span><span class="k">like</span><span class="w"> </span><span class="s1">&#39;% DIAB1%&#39;</span><span class="w"> </span><span class="o">#</span><span class="n">like的匹配得有百分号</span><span class="err">（类似于</span><span class="o">*</span><span class="err">）</span><span class="w"> </span><span class="err">否则该语句等同于</span><span class="o">=</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>02_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/02_stu/</link>
      <pubDate>Sun, 27 Nov 2022 18:14:53 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/02_stu/</guid>
      <description>01_找出出现一次的元素(reduce) 给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元</description>
      <content:encoded><![CDATA[<h2 id="01_找出出现一次的元素reduce">01_找出出现一次的元素(reduce)</h2>
<p>给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p>
<p>你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。</p>
<p>来源：力扣（LeetCode）<br>
链接：https://leetcode.cn/problems/single-number<br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<blockquote>
<p>reduce函数累计 a^b^c^d^&hellip;.<br>
异或  不同输出本身  时间复杂度O(1)   空间复杂度O(n)</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">functools</span> <span class="kn">import</span> <span class="n">reduce</span>
</span></span><span class="line"><span class="cl"><span class="n">nums</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">singleNumber</span><span class="p">(</span><span class="n">nums</span><span class="p">:</span> <span class="nb">list</span><span class="p">[</span><span class="nb">int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">reduce</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span> <span class="p">:</span> <span class="n">x</span><span class="o">^</span><span class="n">y</span><span class="p">,</span><span class="n">nums</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">Solution</span><span class="o">.</span><span class="n">singleNumber</span><span class="p">(</span><span class="n">nums</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="02_update_sql方法asciiif方法case-when">02_update_sql方法(ascii,if方法,case when)</h2>
<p>Salary 表：</p>
<p>+&mdash;&mdash;&mdash;&mdash;-+&mdash;&mdash;&mdash;-+
| Column Name | Type     |
+&mdash;&mdash;&mdash;&mdash;-+&mdash;&mdash;&mdash;-+
| id          | int      |
| name        | varchar  |
| sex         | ENUM     |
| salary      | int      |
+&mdash;&mdash;&mdash;&mdash;-+&mdash;&mdash;&mdash;-+
id 是这个表的主键。
sex 这一列的值是 ENUM 类型，只能从 (&rsquo;m&rsquo;, &lsquo;f&rsquo;) 中取。
本表包含公司雇员的信息。
 </p>
<p>请你编写一个 SQL 查询来交换所有的 &lsquo;f&rsquo; 和 &rsquo;m&rsquo; （即，将所有 &lsquo;f&rsquo; 变为 &rsquo;m&rsquo; ，反之亦然），仅使用 单个 update 语句 ，且不产生中间临时表。</p>
<p>注意，你必须仅使用一条 update 语句，且 不能 使用 select 语句。</p>
<p>查询结果如下例所示。</p>
<p>来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/swap-salary
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">update</span><span class="w"> </span><span class="n">salary</span><span class="w"> </span><span class="k">set</span><span class="w"> </span><span class="n">sex</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">char</span><span class="p">(</span><span class="n">ascii</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">ascii</span><span class="p">(</span><span class="s1">&#39;f&#39;</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">ascii</span><span class="p">(</span><span class="n">sex</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">-- 使用ascii码值的变换 sql语法特点
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- 方法一：MySql中的if语句
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">update</span><span class="w"> </span><span class="n">salary</span><span class="w"> </span><span class="k">set</span><span class="w"> </span><span class="n">sex</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">if</span><span class="p">(</span><span class="n">sex</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;m&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;f&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;m&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">-- 方法二：case when语法
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">update</span><span class="w"> </span><span class="n">salary</span><span class="w"> </span><span class="k">set</span><span class="w"> </span><span class="n">sex</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">case</span><span class="w"> </span><span class="n">sex</span><span class="w"> </span><span class="k">when</span><span class="w"> </span><span class="s1">&#39;m&#39;</span><span class="w"> </span><span class="k">then</span><span class="w"> </span><span class="s1">&#39;f&#39;</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="s1">&#39;m&#39;</span><span class="w"> </span><span class="k">end</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="03_delect_sql建立两个表格">03_delect_sql(建立两个表格)</h2>
<p>输入:
Person 表:
+&mdash;-+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| id | email            |
+&mdash;-+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| 1  | <a href="mailto:john@example.com">john@example.com</a>
 |
| 2  | <a href="mailto:bob@example.com">bob@example.com</a>
  |
| 3  | <a href="mailto:john@example.com">john@example.com</a>
 |
+&mdash;-+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
输出:
+&mdash;-+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| id | email            |
+&mdash;-+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| 1  | <a href="mailto:john@example.com">john@example.com</a>
 |
| 2  | <a href="mailto:bob@example.com">bob@example.com</a>
  |
+&mdash;-+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
解释: <a href="mailto:john@example.com">john@example.com</a>
重复两次。我们保留最小的Id = 1。</p>
<p>来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/delete-duplicate-emails
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## 删除重复项目 使用 sql自连接 
</span></span><span class="line"><span class="cl">```sql
</span></span><span class="line"><span class="cl">DELETE p1 FROM Person p1,
</span></span><span class="line"><span class="cl">    Person p2
</span></span><span class="line"><span class="cl">WHERE
</span></span><span class="line"><span class="cl">    p1.Email = p2.Email AND p1.Id &gt; p2.Id
</span></span><span class="line"><span class="cl">```
</span></span><span class="line"><span class="cl"> 
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>01_stu</title>
      <link>https://www.jaywxl.eu.org/posts/study/01_stu/</link>
      <pubDate>Sun, 27 Nov 2022 17:47:50 +0800</pubDate>
      
      <guid>https://www.jaywxl.eu.org/posts/study/01_stu/</guid>
      <description>01_03题 旋转 转置 遍历 栈存方法（学习） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 matrix = [[7,4],[9,5],[6,3]] nn = [] print(list(zip(*matrix))[::-1]) matrix = map(list, zip(*matrix)) print(matrix) i = 1 while matrix != []:</description>
      <content:encoded><![CDATA[<h2 id="01_03题">01_03题</h2>
<p>旋转 转置<br>
遍历<br>
栈存方法（学习）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">matrix</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="p">],[</span><span class="mi">9</span><span class="p">,</span><span class="mi">5</span><span class="p">],[</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">nn</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="n">matrix</span><span class="p">))[::</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="n">matrix</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">list</span><span class="p">,</span> <span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="n">matrix</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">matrix</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl"> <span class="k">while</span> <span class="n">matrix</span> <span class="o">!=</span> <span class="p">[]:</span>
</span></span><span class="line"><span class="cl">     <span class="k">if</span> <span class="n">i</span><span class="o">%</span><span class="mi">4</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">         <span class="n">aa</span> <span class="o">=</span> <span class="n">matrix</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">         <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">aa</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">             <span class="n">nn</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">aa</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">     <span class="k">if</span> <span class="n">i</span><span class="o">%</span><span class="mi">4</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">         <span class="n">bb</span> <span class="o">=</span> <span class="n">matrix</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">         <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bb</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">             <span class="n">nn</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">bb</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">     <span class="k">if</span> <span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="mi">4</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">         <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">matrix</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">             <span class="n">nn</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">matrix</span><span class="p">[</span><span class="n">a</span><span class="p">]</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">     <span class="k">if</span> <span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="mi">4</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">         <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">matrix</span><span class="p">))[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">             <span class="n">nn</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">matrix</span><span class="p">[</span><span class="n">a</span><span class="p">]</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">     <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">     <span class="k">while</span> <span class="p">[]</span> <span class="ow">in</span> <span class="n">matrix</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">         <span class="n">matrix</span><span class="o">.</span><span class="n">remove</span><span class="p">([])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> <span class="nb">print</span><span class="p">(</span><span class="n">nn</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"> <span class="nb">print</span><span class="p">(</span><span class="n">matrix</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">sql</span><span class="w"> </span><span class="err">题目</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="err">只有</span><span class="w"> </span><span class="n">Ture</span><span class="w"> </span><span class="k">False</span><span class="w"> </span><span class="n">unknow</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="err">有</span><span class="k">NULL</span><span class="w"> </span><span class="err">要判断</span><span class="k">NULL</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>400</title>
      <link>https://www.jaywxl.eu.org/400/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jaywxl.eu.org/400/</guid>
      <description>400</description>
      <content:encoded><![CDATA[]]></content:encoded>
    </item>
    
    <item>
      <title>50x</title>
      <link>https://www.jaywxl.eu.org/50x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jaywxl.eu.org/50x/</guid>
      <description>50x</description>
      <content:encoded><![CDATA[]]></content:encoded>
    </item>
    
    
    
  </channel>
</rss>
